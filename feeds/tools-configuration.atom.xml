<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>飞扬博客-MirsKing</title><link href="/" rel="alternate"></link><link href="/feeds/tools-configuration.atom.xml" rel="self"></link><id>/</id><updated>2014-05-25T17:47:00+08:00</updated><entry><title>Ubuntu下安装Java插件连接浙大RVPN</title><link href="/tools-configuration/enable-java-plugin-to-connect-rvpn-at-zju-on-ubuntu.html" rel="alternate"></link><updated>2014-05-25T17:47:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-05-25:tools-configuration/enable-java-plugin-to-connect-rvpn-at-zju-on-ubuntu.html</id><summary type="html">&lt;p&gt;浙大的RVPN是通过访问rvpn.zju.edu.cn，然后调用Java插件运行Sangfor(深信服)的client然后添加本地路由表实现的。&lt;/p&gt;
&lt;p&gt;windows平台IE上很容易安装Java插件，进而自动下载Sanfor的client。唯一需要注意的是在第一次访问rvpn.zju.edu.cn的时候最好把本地防火墙关闭，否则很可能登陆后一切就绪却卡在“正在初始化”阶段。这个阶段一般是因为权限不够或防火墙禁止了下载客户端、安装vpn虚拟网卡导致的。所以最好是把防火墙关了吧，反正也是鸡肋的东西。&lt;/p&gt;
&lt;p&gt;本文主要是记录下Ubuntu下安装Java插件并连接RVPN的过程。下面就开始喽：&lt;/p&gt;
&lt;h2&gt;Java插件篇&lt;/h2&gt;
&lt;p&gt;Ubuntu中常用的浏览器就是firefox和chrome。先说chrome，笔者用惯了chrome的各种优秀插件和同步功能，虽然firefox也有，但是firefox的UI现在都开始抄袭chrome了，这让笔者更坚定了chrome的阵营。&lt;/p&gt;
&lt;p&gt;可惜，就是这一坚定，让笔者走了不少弯路。本文发问之日，chrome已经更新到了稳定版35.0；而据官网介绍Chrome35移除了对像Java这类NPAPI插件的支持。所以此路不通，可惜了笔者还尝试了互联网上各种方法那么久。不过倒是有个解决方案就是降级使用chrome 34，这个可以到&lt;a href="http://mirror.pcbeta.com/google/chrome/deb/pool/main/g/google-chrome-stable/"&gt;Chrome&lt;/a&gt;这里去下载deb包。&lt;/p&gt;
&lt;p&gt;笔者喜欢追新，所以没有选用此法，而是被迫安装了firefox。以下是下载和安装java插件的步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;浙大的RVPN在windows下用jre7u55测试通过，不过貌似ubuntu下不行，官网推荐6u27版，可以&lt;a href="http://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-javase6-419409.html#jre-6u27-oth-JPR"&gt;点击这里下载&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载的bin文件，依次执行&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo chmod +x jre-6u27-linux-x64.bin  
./jre-6u27-linux-x64.bin&lt;/code&gt;
即可得到一个jre1.6.0_27的目录，本文要用到的就是目录中的lib/amd64/libnpjp2.so（x86用户自行把amd64换为i386）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cd到mozilla（firefox）的插件目录，一般是/usr/lib/mozilla/plugins/。然后运行&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo ln -s \$JAVA\_HOME/lib/amd64/libnpjp2.so&lt;/code&gt;
注意这里不用设置环境变量&lt;code&gt;JAVA_HOME&lt;/code&gt;那么麻烦，只要把&lt;code&gt;$JAVA_HOME&lt;/code&gt;替换为你第二步生成的文件夹目录即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后重启firefox，看下about://plugins中Java插件是否安装成功。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其实chrome的安装步骤类似，只是其插件目录一般是/opt/google/chrome/plugins/，此处的plugins目录如果没有，自行mkdir即可。只可惜35版本的chrome不支持Java插件了...&lt;/p&gt;
&lt;h2&gt;rvpn的设置&lt;/h2&gt;
&lt;p&gt;java安装成功后，就可以访问rvpn了。访问rvpn.zju.edu.cn登陆后，会运行一个java插件，同意运行即可。然后会下载sangfor的一个client到\~/.sangfor目录。这里注意一下打开firefox时最好在terminal中用&lt;code&gt;sudo firefox&lt;/code&gt;或&lt;code&gt;gksudo firefoxi&lt;/code&gt;打开，因为sangfor在运行时会虚拟一个tun0的网卡，然后建立一组路由表，这个是需要root权限的。&lt;/p&gt;
&lt;p&gt;这里如果运行正常，就会出现&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/easyconnect.png"&gt;&lt;img alt="easyconnect" src="/images/easyconnect.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个小图标。然后就可以尽情访问内网了。&lt;/p&gt;
&lt;p&gt;但是这里笔者在执行的时候遇到了一个问题。现象是：登陆显示正常，但是没有绿色的小图标，也就无法访问内网。&lt;/p&gt;
&lt;p&gt;笔者当时尝试了n种方法，郁闷到了极点。出去转了一圈，笔者就想，在windows上，java插件运行后既然调用的是sangfor的exe然后出现了绿色图标，也即easyconnect，那么ubuntu一定是调用sangfor这一步出错导致了上述现象。&lt;/p&gt;
&lt;p&gt;于是，笔者cd到\~/.sangfor/ssl/发现了一个shell文件夹，然后发现了sslservice.sh这个脚本，于是运行一下，发现一直报错，如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;loading&lt;/span&gt; &lt;span class="n"&gt;shared&lt;/span&gt; &lt;span class="n"&gt;libraries&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;libstdc&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.6&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cannot&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt; &lt;span class="n"&gt;shared&lt;/span&gt;
&lt;span class="n"&gt;object&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;such&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ok，共享库的问题，于是google之，笔者找到了解决方法，运行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;libstdc&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;  
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;lib32stdc&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装这个依赖包，再次访问rvpn，一切正常。&lt;/p&gt;
&lt;h2&gt;小结&lt;/h2&gt;
&lt;p&gt;RVPN在windows下很easy，特别是有IE浏览器这种所有开发必须兼容的强大浏览器。&lt;/p&gt;
&lt;p&gt;而Ubuntu下其实Firefox/Chrome也都是支持的，可惜Chrome升级35版后放弃了对Java插件的支持。&lt;/p&gt;
&lt;p&gt;RVPN在windows和Ubuntu下倒腾了两天，想来这种东西常常是某人按官网流程来一遍就所有OK，某人搞了N久却一直搞不定的东西。所以这种东西总是不能一味照着别人的步子重复的，还是要搞的时候思路清楚，把握其中的原理，然后借助强大的google，问题就迎刃而解了！&lt;/p&gt;</summary><category term="linux"></category><category term="java plugin"></category><category term="rvpn"></category></entry><entry><title>ubuntu12.04安装vim7.4 with lua的心酸历程</title><link href="/tools-configuration/ubuntu12-04-vim7-4-with-lua.html" rel="alternate"></link><updated>2014-05-09T19:42:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-05-09:tools-configuration/ubuntu12-04-vim7-4-with-lua.html</id><summary type="html">&lt;p&gt;因团队需要，忍痛抛弃了ubuntu14.04 LTS，改回ubuntu12.04，允许我吐槽一分钟：&lt;/p&gt;
&lt;p&gt;第一就是搜狗和麒麟合力打造的新版linux版输入法，简单&lt;code&gt;sudo dpkg -i&lt;/code&gt;，结果到ubuntu12.04这却要ppa升级fcitx。升级玩的fcitx却各种不稳定，不定时抽风，然后整个输入法就甭想了。&lt;/p&gt;
&lt;p&gt;第二是今天的重点，ubuntu14.04安装vim 7.4直接一个&lt;code&gt;sudo apt-get install vim&lt;/code&gt;就ok了，结果到12.04这，偏偏要给你装vim 7.3。vim
7.3也就算了，偏偏低于vim 7.3.885。结果就是悲剧的无法使用大名鼎鼎的&lt;strong&gt;&lt;a href="https://github.com/Shougo/neocomplete.vim"&gt;neocomplete.vim&lt;/a&gt;&lt;/strong&gt;插件。本来以为找到了终极的YouCompleteMe插件，结果发现YouCompleteMe是依赖neocomplete.vim的。&lt;/p&gt;
&lt;p&gt;本来吧，在ubuntu12.04上装vim 7.4也不是什么难事，ppa升级，或者编译进去都OK，可惜ppa升级又没办法开lua。于是乎，在没有lua的情况下使用neocomplete就会崩溃的发现插入模式下每按一次enter，你就会得到&lt;/p&gt;
&lt;p&gt;E117: 未定义的函数: neocomplcache#enable&lt;/p&gt;
&lt;p&gt;这样的错误。接着就要连按几下enter等待这个错误提示结束，然后光标的位置就会多出一个0来。忍了两天终于忍无可忍，于是乎怒了重新装带有lua的vim 7.4。于是乎有了这篇文章。&lt;/p&gt;
&lt;p&gt;OK，吐槽结束，转入这个正题，在ubuntu12.04上装带有lua的vim 7.4教程：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;remove&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;runtime&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gnome&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tiny&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;common&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gui&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;common&lt;/span&gt;  
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;purge&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;runtime&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gnome&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tiny&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;common&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gui&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;common&lt;/span&gt;  
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dep&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gnome&lt;/span&gt;  
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;luajit&lt;/span&gt; &lt;span class="n"&gt;libluajit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;5.1&lt;/span&gt; &lt;span class="n"&gt;libncurses5&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;libgnome2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;libgnomeui&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;libgtk2&lt;/span&gt;&lt;span class="mf"&gt;.0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;libatk1&lt;/span&gt;&lt;span class="mf"&gt;.0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;libbonoboui2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;libcairo2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;libx11&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;libxpm&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;libxt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;ruby&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;mercurial&lt;/span&gt;  
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;ln&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;luajit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.0.0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;beta9&lt;/span&gt; &lt;span class="n"&gt;luajit&lt;/span&gt;  
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;  
&lt;span class="n"&gt;hg&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//code.google.com/p/vim/ #若google被墙,则可以clone我github上的备份 https://github.com/mirsking/vim.git&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;configure&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;huge&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cscope&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rubyinterp&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;largefile&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;disable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;netbeans&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pythoninterp&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python2&lt;/span&gt;&lt;span class="mf"&gt;.7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;perlinterp&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;luainterp&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;luajit&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fail&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lua&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;prefix&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gui&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;gnome2&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cscope&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;prefix&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;

&lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;VIMRUNTIMEDIR&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vim74&lt;/span&gt;  
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;命令很简单，卸载，依赖处理，装依赖，编译vim7.4（加入lua参数）。终于可以爽爽的用vim了。&lt;/p&gt;
&lt;h2&gt;about vimrc and plugins, 2015-02-08&lt;/h2&gt;
&lt;p&gt;vim的vimrc一直用的&lt;a href="tianjun.ml"&gt;tianjun&lt;/a&gt;学长的, 非常的好用, 不过后来自己添加了一些其他插件, 然后上传到了git上备份. 这里总结一下添加的插件及插件安装方法.&lt;/p&gt;
&lt;h3&gt;插件安装&lt;/h3&gt;
&lt;p&gt;使用bundle管理插件, 所以首先要下载bundle:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir -p ~/.vim/bundle/
&lt;span class="nb"&gt;cd&lt;/span&gt; ~/.vim/bundle/
git clone https://github.com/gmarik/vundle.git 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;接着把.vimrc放到~目录中, 然后启动vim, 这是会报一堆错, 都是因为插件没安装的原因, 一路回车进入vim界面, 然后&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;BundleInstall&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样.vimrc中的插件就会自动下载并安装, github网速略慢, 所以这个会持续略久...&lt;/p&gt;
&lt;h3&gt;使用的插件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;YouCompleteMe : 语义级自动补全神器&lt;/li&gt;
&lt;li&gt;xml.vim : xml高亮&lt;/li&gt;
&lt;li&gt;syntastic :   语法检查&lt;/li&gt;
&lt;li&gt;vim-instant-markdown : vim写markdown, 浏览器实时预览&lt;/li&gt;
&lt;li&gt;vim-markdown :    这个也是个markdown插件, 貌似安装比较简单, 不过还没试验过.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Linux"></category><category term="ubuntu"></category><category term="程序员"></category></entry><entry><title>Visual Studio添加Armadillo线性代数库实现矩阵运算</title><link href="/tools-configuration/add-armadillo-linear-algebra-library-for-visual-studio.html" rel="alternate"></link><updated>2014-03-16T10:05:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-03-16:tools-configuration/add-armadillo-linear-algebra-library-for-visual-studio.html</id><summary type="html">&lt;p&gt;Armadillo是一个C++开发的线性代数库，其可以使用LAPACK进行加速，从而取得了速度和易用性上的平衡。从而可以方便高效地把Matlab中的程序方便地移植到C++中。  &lt;/p&gt;
&lt;p&gt;Armadillo也提供了python的接口armanpy。同时在Armadillo基础上也开发了许多实用的包，如用于快速机器学习的MLPACK。&lt;br /&gt;
详细介绍可以看官网：&lt;a href="http://arma.sourceforge.net/"&gt;Armadillo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;由于最近做毕设需要将Matlab的算法移植到C++上，所以安装了这个库，虽然简单，却也学习到了一些东西。  &lt;/p&gt;
&lt;p&gt;下面是安装过程及一些要注意的，记录一下，方便以后查阅。有需要的童鞋也可以一步一步跟着做一做。&lt;/p&gt;
&lt;h3&gt;到官网下载Armadillo的源文件&lt;/h3&gt;
&lt;p&gt;这里要注意的是，今天为止最新的版本是armadillo-4.100.2.tar.gz。而4.0以后的版本貌似只支持visual studio 2010以上的编译器，如果使用的是visual studio 2008的编译器，会提示编译器版本过低。所以像我这样不得不用2008的就只能下载低版本：我使用的是armadillo-3.920.4.tar.gz，测试可用。下边是下载链接。  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://sourceforge.net/projects/arma/files/armadillo-3.930.4.tar.gz/download"&gt;armadillo-3.930.4.tar.gz（2008可用）&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://sourceforge.net/projects/arma/files/armadillo-4.100.2.tar.gz/download"&gt;armadillo-4.100.2.tar.gz（2010以上版本可用）&lt;/a&gt;  &lt;/p&gt;
&lt;h3&gt;安装方法&lt;/h3&gt;
&lt;p&gt;以armadillo-3.930.4.tar.gz为例，下载完成后直接解压到任意目录，比如：X:/armadillo-3.930.4/&lt;br /&gt;
将X:/armadillo-3.930.4/include加入到visual studio 包含文件目录中，VS2008 是在 “工具-&gt;选项-&gt;VC++目录-&gt;包含文件”这里设置；vs2013则更改到了项目属性页中。&lt;/p&gt;
&lt;h3&gt;安装 LAPACK&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://icl.cs.utk.edu/lapack-for-windows/lapack/index.html"&gt;官网地址&lt;/a&gt; 但是其需要单个文件单独下载，而且下载速度不敢恭维。所以我这里打包上传到了百度网盘，下载请&lt;a href="http://pan.baidu.com/s/1o6I1Mxc"&gt;点击&lt;/a&gt;。压缩包中有WIN32位和WIN64位两种dll和lib文件，可以根据需要选择。  &lt;/p&gt;
&lt;p&gt;下载后，同样解压到任意文件夹，如：X:\Lapack\&lt;br /&gt;
以WIN32为例：&lt;br /&gt;
将X:\Lapack\WIN32添加到visual studio 库文件目录中，方法同上。&lt;/p&gt;
&lt;h3&gt;打开Armadillo的LAPACK&lt;/h3&gt;
&lt;p&gt;功能（armadillo4.0以上的版本，默认打开，请直接跳过）。  &lt;/p&gt;
&lt;p&gt;打开X:/armadillo-3.930.4/include\armadillo_bits目录中的config.hpp文件。&lt;br /&gt;
找到并将以下两行前的注释去掉，改为：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="c"&gt;#define ARMA_USE_LAPACK  &lt;/span&gt;
 &lt;span class="c"&gt;#define ARMA_USE_BLAS&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;写个测试程序&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="vi"&gt;#include&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;iostream&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  
 &lt;span class="vi"&gt;#include&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;armadillo&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  
 &lt;span class="nx"&gt;int&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
 &lt;span class="p"&gt;{&lt;/span&gt;  
 &lt;span class="nx"&gt;arma&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nl"&gt;mat&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arma&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nl"&gt;randu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
 &lt;span class="nx"&gt;arma&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nl"&gt;mat&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arma&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nl"&gt;inv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
 &lt;span class="nx"&gt;A.print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A = &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
 &lt;span class="nx"&gt;B.print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;inv（A） = &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
 &lt;span class="p"&gt;}&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在项目属性中的链接器中添加 libblas.lib，liblapack.lib，liblapacke.lib 编译生成。  &lt;/p&gt;
&lt;p&gt;这里要特别注意一点，就是在运行前要将X:\Lapack\WIN32目录中的三个dll以及X:\Lapack\目录中的两个dll拷贝到生成的.exe对应目录中，否则在运行时会提示缺少dll，而报错。&lt;/p&gt;
&lt;p&gt;好了，尽情享受Armadillo线性代数库带来的matlab算法移植的便捷吧！&lt;/p&gt;</summary><category term="Windows"></category><category term="Matlab"></category><category term="VC++"></category><category term="程序员"></category></entry></feed>