<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>飞扬博客-MirsKing</title><link href="mirsking.tk/" rel="alternate"></link><link href="mirsking.tk/feeds/all.atom.xml" rel="self"></link><id>mirsking.tk/</id><updated>2015-01-23T13:00:00+08:00</updated><entry><title>Blog on Openshift and Github Pages</title><link href="mirsking.tk/blog/blog-on-openshift-and-github-pages.html" rel="alternate"></link><updated>2015-01-23T13:00:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2015-01-23:mirsking.tk/blog/blog-on-openshift-and-github-pages.html</id><summary type="html">&lt;p&gt;考试终于结束了，复习这两周好辛苦的说：又是感冒，又是扭到脖子...&lt;/p&gt;
&lt;p&gt;上次复习过程中将博客迁移到了Github Pages中，暂时分配了域名&lt;a href="http://mirsking.tk"&gt;mirsking.tk&lt;/a&gt;，然后一直想添加一个二级域名&lt;a href="#"&gt;feed.mirsking.tk&lt;/a&gt;作为RSS的域名，以便和原来的博客无缝转移。可惜Github Pages貌似只支持一个域名，无法 做二级域名转发，而且不支持.htaccess...&lt;/p&gt;
&lt;p&gt;无奈VPS太贵，踌躇间，突然想起以前申请的免费云主机Openshift(Openshift的优点是长期免费，而且最重要的式支持git!!!)于是乎，折腾就此开始。现在记录下折腾的过程和成果。&lt;/p&gt;
&lt;h2&gt;折腾效果&lt;/h2&gt;
&lt;h3&gt;博客域名:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="n"&gt;mirsking&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt; &lt;span class="n"&gt;CNAME&lt;/span&gt;&lt;span class="err"&gt;到&lt;/span&gt; &lt;span class="n"&gt;mirsking&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt; &lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="err"&gt;由于&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="err"&gt;域名对国内搜索引擎不友好&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;所以这个域名只做&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="err"&gt;的备份用&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

 &lt;span class="n"&gt;mirsking&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="n"&gt;CNAME&lt;/span&gt;&lt;span class="err"&gt;到&lt;/span&gt; &lt;span class="n"&gt;domain&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mirsking&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rhcloud&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="err"&gt;这个作为主域名&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;兼容原来博客基本上所有的链接地址&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;原博客的部分链接做了删除&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;feed&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mirsking&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="n"&gt;CNMAE&lt;/span&gt;&lt;span class="err"&gt;到&lt;/span&gt; &lt;span class="n"&gt;feed&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mirsking&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rhcloud&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="err"&gt;这个作为&lt;/span&gt;&lt;span class="n"&gt;feed&lt;/span&gt;&lt;span class="err"&gt;的主域名&lt;/span&gt;

 &lt;span class="n"&gt;mirsking&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ml&lt;/span&gt; &lt;span class="n"&gt;CNAME&lt;/span&gt;&lt;span class="err"&gt;到&lt;/span&gt; &lt;span class="n"&gt;mirsking&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
 &lt;span class="n"&gt;feed&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mirsking&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ml&lt;/span&gt; &lt;span class="n"&gt;CNAME&lt;/span&gt;&lt;span class="err"&gt;到&lt;/span&gt; &lt;span class="n"&gt;feed&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mirsking&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;

 &lt;span class="n"&gt;wangpeng&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ml&lt;/span&gt; &lt;span class="n"&gt;CNAME&lt;/span&gt;&lt;span class="err"&gt;到&lt;/span&gt; &lt;span class="n"&gt;mirsking&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
 &lt;span class="n"&gt;feed&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wangpeng&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ml&lt;/span&gt; &lt;span class="n"&gt;CNAME&lt;/span&gt;&lt;span class="err"&gt;到&lt;/span&gt; &lt;span class="n"&gt;feed&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mirsking&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;额, 不要骂我搞了这么多域名, ml/tk都是免费域名,只是为了防止被别人抢注, wangpeng.ml本来是被别人占着的,好不容易刚刚抢注到...&lt;/p&gt;
&lt;h2&gt;折腾过程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Github Pages存储的是pelican生成的静态网页,具体看我上一篇博客.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Openshift 上创建了两个app,一个用来托管mirsking.com主站,一个用来托管feed.mirsking.com. 没办法,谁让Openshift也不支持二级域名重定向呢. 不过不知道是否支持.htaccess, 等有空了再试验一下.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Openshift创建app并配置nginx&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;登陆&lt;a href="https://openshift.redhat.com/"&gt;openshift&lt;/a&gt;,在Applications选项卡中添加Application&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择最右下脚的Do it yourself(注意这里一定要选择diy,否则运行nginx就要停用已经跑起来的占用了端口服务)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cd到Openshift的TMP目录下载安装nginx,这里初次用Openshift的我感觉到了深深的恶意,没有找到Openshift的文档,不清楚Openshift到底又多少各变量,在此总结下:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Openshit变量总结&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$OPENSHIFT_TMP_DIR&lt;/span&gt;          &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;
&lt;span class="nv"&gt;$OPENSHIFT_DATA_DIR&lt;/span&gt;         &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;/app-root/&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
&lt;span class="nv"&gt;$OPENSHIFT_DIY_IP&lt;/span&gt;           &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;ip&lt;/span&gt;
&lt;span class="nv"&gt;$OPENSHIFT_DIY_PORT&lt;/span&gt;         &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;nginx安装过程&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$OPENSHIFT_TMP_DIR&lt;/span&gt;
&lt;span class="n"&gt;wget&lt;/span&gt; &lt;span class="n"&gt;http:&lt;/span&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="sr"&gt;/download/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.7.9&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt;
&lt;span class="n"&gt;wget&lt;/span&gt; &lt;span class="n"&gt;ftp:&lt;/span&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ac&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uk&lt;/span&gt;&lt;span class="sr"&gt;/pub/so&lt;/span&gt;&lt;span class="n"&gt;ftware&lt;/span&gt;&lt;span class="sr"&gt;/programming/&lt;/span&gt;&lt;span class="n"&gt;pcre&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pcre&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;8.36&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt;

&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="n"&gt;xzf&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.7.9&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt;
&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="n"&gt;xzf&lt;/span&gt; &lt;span class="n"&gt;pcre&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;8.36&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt;

&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.7.9&lt;/span&gt;
&lt;span class="nb"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="nv"&gt;$OPENSHIFT_DATA_DIR&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="sr"&gt;/configure --prefix=$OPENSHIFT_DATA_DIR/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pcre&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$OPENSHIFT_TMP_DIR&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pcre&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;8.36&lt;/span&gt;
&lt;span class="n"&gt;make&lt;/span&gt; 
&lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;经过上述步骤nginx已经安装成功了,下边就是配置nginx并启动了,先:&lt;code&gt;echo $OPENSHIFT_DIY_IP&lt;/code&gt;  &lt;code&gt;echo $OPENSHIFT_DIY_PORT&lt;/code&gt;, 获取application的ip和端口.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;vim&lt;/span&gt; &lt;span class="nv"&gt;$OPENSHIFT_DATA_DIR&lt;/span&gt;&lt;span class="sr"&gt;/nginx/co&lt;/span&gt;&lt;span class="n"&gt;nf&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;找到&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;server_name&lt;/span&gt; &lt;span class="n"&gt;localhost&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="n"&gt;your_site_dir&lt;/span&gt;
        &lt;span class="nb"&gt;index&lt;/span&gt; &lt;span class="nb"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;修改为上边&lt;code&gt;echo&lt;/code&gt;出来的ip和端口. root后边写自己的博客地址.&lt;/p&gt;
&lt;p&gt;最后到&lt;code&gt;$OPENSHIFT_DATA_DIR/nginx/sbin/&lt;/code&gt;目录运行nginx,nginx就成功跑起来了.&lt;/p&gt;
&lt;p&gt;这里如果出现"Permission Denied"之类的错误,基本都是ip和端口没配置好,Openshift没给那些端口权限导致的.&lt;/p&gt;
&lt;p&gt;好了,这次总结到此为止,开始写老板的大作业喽!!!&lt;/p&gt;</summary><category term="blog"></category><category term="interests"></category></entry><entry><title>Write Blog with Pelican</title><link href="mirsking.tk/blog/write_blog_with_pelican.html" rel="alternate"></link><updated>2015-01-12T21:40:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2015-01-12:mirsking.tk/blog/write_blog_with_pelican.html</id><summary type="html">&lt;p&gt;2014年的寒假，大四即将结束，天生爱折腾的我买了域名、买了go（坑）daddy（爹）的空间搭建起了个人的博客，整个博客的模块完全仿照&lt;a href="tianjun.ml"&gt;tianjun&lt;/a&gt;展开，用的却是大而笨的wordpress。现如今，一年过去了，买的一年的空间就要过期，却发现自己的博客里边只静静地躺着21篇博文(加上草稿)...&lt;/p&gt;
&lt;p&gt;目前国内虚拟主机除了阿里云不太敢用，国外主机速度太慢，还经常被Q。想了良久，还是回归一个码农的本原，就在github.io上搭一个静态站吧，主要还是监督自己注意总结自己的学习内容记录下来。&lt;/p&gt;
&lt;p&gt;Github上建站大都式用jekyl、octopress，可惜都是用ruby写的。ruby不会也就不容易维护，于是放狗搜了一把有没有python的建站，发现还真有&lt;a href="http://docs.getpelican.com/en/3.5.0/index.html"&gt;Pelican&lt;/a&gt;,果断用起来，现在把过程记下来，算是2015开博的第一篇吧（虽然很快就要考试了...还是要克服万难，坚持下来！）&lt;/p&gt;
&lt;h3&gt;pelican 安装&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt; 
&lt;span class="nb"&gt;mkdir&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt;
&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;quickstart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后一步完成后，在blog目录会生成如下图的目录，以后只要在content目录下写markdown，然后在blog目录下&lt;code&gt;pelican&lt;/code&gt;一下，静态文件就输出到output文件夹了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="pelican目录结构" src="mirsking.tk/images/150112_pelican_direction_struct.png" /&gt;&lt;/p&gt;
&lt;h3&gt;pelican markdown 支持&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;Markdown&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;pelican 主题的安装与配置&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;themes&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="c1"&gt;#显示已安装主题&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;https:&lt;/span&gt;&lt;span class="sr"&gt;//gi&lt;/span&gt;&lt;span class="n"&gt;thub&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="sr"&gt;/getpelican/&lt;/span&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;themes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="c1"&gt;#clone pelican&amp;#39;s themes on github&lt;/span&gt;
&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;themes&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Theme&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装好theme后，&lt;code&gt;pelican-themes -l&lt;/code&gt;中就可以看到已安装的主题了，然后在pelicanconf.py中添加变量&lt;code&gt;THEME='theme's name&lt;/code&gt;就可以了。&lt;/p&gt;
&lt;p&gt;2015，为我自己加油！&lt;/p&gt;</summary><category term="blog"></category><category term="interests"></category></entry><entry><title>TP WR941N v2原厂、OpenWRT、DD-WRT、刷不死的Uboot</title><link href="mirsking.tk/other-interests/tp-wr941n-v2-with-openwrt-ddwrt-and-uboot.html" rel="alternate"></link><updated>2014-07-30T00:15:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-07-30:mirsking.tk/other-interests/tp-wr941n-v2-with-openwrt-ddwrt-and-uboot.html</id><summary type="html">&lt;p&gt;曾经学长Tianjun告诉我一个好玩的WRTnode，可惜148大洋一个裸板太贵，而且错过了公测…&lt;/p&gt;
&lt;p&gt;而家里正好无线网需要中继，于是冲着AR9314大厂的芯入手了一款改版的WR941N，TP的产品向来是早期版本做工扎实稳定，新的版本就不断偷工减料降低成本，所以选择了v2版（为了省事，直接入手的改版机，改了SMA，16M Flash，64M RAM，加USB，基本够折腾了）。&lt;/p&gt;
&lt;p&gt;既然有WRTnode的前奏，当然是想刷OpenWRT耍耍，可惜改版机入手后就已经刷成了OpenWRT+刷不死的Uboot。不过回来后发现有一天左右死机一次的bug，于是乎想刷回官方固件，这其中刷坏了Uboot，各种辛酸泪啊。&lt;/p&gt;
&lt;p&gt;心酸不表，本文主要总结下刷机历程，以备日后有时间再折腾而翻阅。&lt;/p&gt;
&lt;h2&gt;固件互刷&lt;/h2&gt;
&lt;p&gt;不用Uboot，最安全的原厂、OpenWRT、DD-WRT互刷。此法乃网络上搞到的，只做简单总结：  &lt;/p&gt;
&lt;h3&gt;原厂——&gt; OpenWRT&lt;/h3&gt;
&lt;p&gt;A、直接网页升级固件：openwrt-ar71xx-tl-wr941nd-v2-squashfs-factory.bin。&lt;br /&gt;
&lt;a href="http://downloads.openwrt.org/snapshots/trunk/ar71xx"&gt;固件下载地址&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;B、然后telnet到路由，将openwrt-ar71xx-tl-wr941nd-v2-squashfs-sysupgrad.bin固件上传到/tmp目录，使用命令&lt;code&gt;mtd –r write openwrt-ar71xx-tl-wr941nd-v2-squashfs-sysupgrad.bin firmware&lt;/code&gt; 刷更新包。  &lt;/p&gt;
&lt;p&gt;备注：上传文件到路由有两种方法，一种直接用winscp，一种用HFS建立虚拟文件服务器，然后在路由端使用wget命令。&lt;/p&gt;
&lt;h3&gt;OpenWRT ——&gt; DD-WRT&lt;/h3&gt;
&lt;p&gt;在Openwrt网页升级factory-to-ddwrt.bin固件，需要的再在DD网页升级tl-wr941nd-webflash.bin固件。&lt;br /&gt;
&lt;a href="ftp://ftp.dd-wrt.com/others/eko/BrainSlayer-V24-preSP2/2013/04-15-2013-r21286/"&gt;固件下载地址&lt;/a&gt;  &lt;/p&gt;
&lt;h3&gt;DD-WRT ——&gt; 原厂&lt;/h3&gt;
&lt;p&gt;这个是是用一款神器ddwrt2factory.exe，使用的固件是TP官网下的。不过据我测试，TP13年的那个固件不成功（会不断重启），推荐10年和11年的固件。&lt;br /&gt;
固件下载地址：TP官网&lt;/p&gt;
&lt;h2&gt;刷不死的Uboot&lt;/h2&gt;
&lt;p&gt;刷Uboot有风险，提前提醒大家。我的就纠结了好久才搞好。  &lt;/p&gt;
&lt;h3&gt;Uboot固件&lt;/h3&gt;
&lt;p&gt;首先上Uboot固件，941n v2的Uboot在网上能找到很多，但真正能用的不多，经本人测试，推荐这个Uboot（&lt;a href="http://pan.baidu.com/s/1i3sXYGd"&gt;百度网盘&lt;/a&gt;）。不过这个Uboot在刷之前，切记将其中的MAC和PIN码修改成自己的，否则无法使用无线网络，切记切记，笔者就是在此地被坑了许久。&lt;/p&gt;
&lt;p&gt;修改方法：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;用winHex打开这个bin文件，ALT+G转到01fc00处，这里即为MAC地址，默认是112233445566。  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同样转到01fe00处，这里修改PIN码，默认是123456&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;刷Uboot&lt;/h3&gt;
&lt;p&gt;刷Uboot的方法有很多，本文不表编程器法，只讲在telnet或ssh到路由上的方法。  &lt;/p&gt;
&lt;p&gt;一般刷Uboot都是在DDWRT下刷，因为OpenWRT对Uboot和ART区域进行了锁定。但是笔者遇到的一个坑爹的情况就是由于刷了未改MAC的Uboot导致刷到OpenWRT后无法返回DD。幸而有haxc大神编译了未锁定Uboot版OpenWRT，于是乎救回了差点变砖的941。OK，本文推荐的haxc编译的可刷Uboot的OpenWRT固件闪亮登场（&lt;a href="http://pan.baidu.com/s/1c06FzjU"&gt;百度网盘&lt;/a&gt;）。  &lt;/p&gt;
&lt;p&gt;无论是OpenWRT还是DDWRT，刷Uboot的方法都一致。&lt;/p&gt;
&lt;p&gt;A、 telnet或ssh到路由&lt;br /&gt;
B、 使用 cat /proc/mtd命令查看mtd情况&lt;br /&gt;
OpenWRT一般是这样的&lt;/p&gt;
&lt;p&gt;&lt;img alt="uboot" src="mirsking.tk/images/uboot.png" /&gt;&lt;/p&gt;
&lt;p&gt;DD-WRT类似，只是最后一列的name一般有所差别，这里的name一定要确定。下一步要用。  &lt;/p&gt;
&lt;p&gt;C、 使用命令  &lt;/p&gt;
&lt;p&gt;OpenWRT用：&lt;code&gt;mtd –r write uboot.bin u-boot&lt;/code&gt;&lt;br /&gt;
DDWRT用：&lt;code&gt;mtd –r write uboot.bin RedBoot&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;其中uboot.bin是uboot的二进制文件。后边的参数就是上一步记下的name，一般OpenWRT是u-boot，而DDWRT是RedBoot。&lt;/p&gt;
&lt;p&gt;OK，总结完毕，希望对使用这款路由的机油们有所帮助，更重要的是日后再玩起这个，不会太浪费时间去重新摸索。&lt;/p&gt;</summary><category term="linux"></category><category term="OpenWRT"></category></entry><entry><title>Ubuntu下安装Java插件连接浙大RVPN</title><link href="mirsking.tk/tools-configuration/enable-java-plugin-to-connect-rvpn-at-zju-on-ubuntu.html" rel="alternate"></link><updated>2014-05-25T17:47:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-05-25:mirsking.tk/tools-configuration/enable-java-plugin-to-connect-rvpn-at-zju-on-ubuntu.html</id><summary type="html">&lt;p&gt;浙大的RVPN是通过访问rvpn.zju.edu.cn，然后调用Java插件运行Sangfor(深信服)的client然后添加本地路由表实现的。&lt;/p&gt;
&lt;p&gt;windows平台IE上很容易安装Java插件，进而自动下载Sanfor的client。唯一需要注意的是在第一次访问rvpn.zju.edu.cn的时候最好把本地防火墙关闭，否则很可能登陆后一切就绪却卡在“正在初始化”阶段。这个阶段一般是因为权限不够或防火墙禁止了下载客户端、安装vpn虚拟网卡导致的。所以最好是把防火墙关了吧，反正也是鸡肋的东西。&lt;/p&gt;
&lt;p&gt;本文主要是记录下Ubuntu下安装Java插件并连接RVPN的过程。下面就开始喽：&lt;/p&gt;
&lt;h2&gt;Java插件篇&lt;/h2&gt;
&lt;p&gt;Ubuntu中常用的浏览器就是firefox和chrome。先说chrome，笔者用惯了chrome的各种优秀插件和同步功能，虽然firefox也有，但是firefox的UI现在都开始抄袭chrome了，这让笔者更坚定了chrome的阵营。&lt;/p&gt;
&lt;p&gt;可惜，就是这一坚定，让笔者走了不少弯路。本文发问之日，chrome已经更新到了稳定版35.0；而据官网介绍Chrome35移除了对像Java这类NPAPI插件的支持。所以此路不通，可惜了笔者还尝试了互联网上各种方法那么久。不过倒是有个解决方案就是降级使用chrome 34，这个可以到&lt;a href="http://mirror.pcbeta.com/google/chrome/deb/pool/main/g/google-chrome-stable/"&gt;Chrome&lt;/a&gt;这里去下载deb包。&lt;/p&gt;
&lt;p&gt;笔者喜欢追新，所以没有选用此法，而是被迫安装了firefox。以下是下载和安装java插件的步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;浙大的RVPN在windows下用jre7u55测试通过，不过貌似ubuntu下不行，官网推荐6u27版，可以&lt;a href="http://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-javase6-419409.html#jre-6u27-oth-JPR"&gt;点击这里下载&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载的bin文件，依次执行&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo chmod +x jre-6u27-linux-x64.bin  
./jre-6u27-linux-x64.bin&lt;/code&gt;
即可得到一个jre1.6.0_27的目录，本文要用到的就是目录中的lib/amd64/libnpjp2.so（x86用户自行把amd64换为i386）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cd到mozilla（firefox）的插件目录，一般是/usr/lib/mozilla/plugins/。然后运行&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo ln -s \$JAVA\_HOME/lib/amd64/libnpjp2.so&lt;/code&gt;
注意这里不用设置环境变量&lt;code&gt;JAVA_HOME&lt;/code&gt;那么麻烦，只要把&lt;code&gt;$JAVA_HOME&lt;/code&gt;替换为你第二步生成的文件夹目录即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后重启firefox，看下about://plugins中Java插件是否安装成功。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其实chrome的安装步骤类似，只是其插件目录一般是/opt/google/chrome/plugins/，此处的plugins目录如果没有，自行mkdir即可。只可惜35版本的chrome不支持Java插件了...&lt;/p&gt;
&lt;h2&gt;rvpn的设置&lt;/h2&gt;
&lt;p&gt;java安装成功后，就可以访问rvpn了。访问rvpn.zju.edu.cn登陆后，会运行一个java插件，同意运行即可。然后会下载sangfor的一个client到\~/.sangfor目录。这里注意一下打开firefox时最好在terminal中用&lt;code&gt;sudo firefox&lt;/code&gt;或&lt;code&gt;gksudo firefoxi&lt;/code&gt;打开，因为sangfor在运行时会虚拟一个tun0的网卡，然后建立一组路由表，这个是需要root权限的。&lt;/p&gt;
&lt;p&gt;这里如果运行正常，就会出现&lt;/p&gt;
&lt;p&gt;&lt;a href="mirsking.tk/images/easyconnect.png"&gt;&lt;img alt="easyconnect" src="mirsking.tk/images/easyconnect.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个小图标。然后就可以尽情访问内网了。&lt;/p&gt;
&lt;p&gt;但是这里笔者在执行的时候遇到了一个问题。现象是：登陆显示正常，但是没有绿色的小图标，也就无法访问内网。&lt;/p&gt;
&lt;p&gt;笔者当时尝试了n种方法，郁闷到了极点。出去转了一圈，笔者就想，在windows上，java插件运行后既然调用的是sangfor的exe然后出现了绿色图标，也即easyconnect，那么ubuntu一定是调用sangfor这一步出错导致了上述现象。&lt;/p&gt;
&lt;p&gt;于是，笔者cd到\~/.sangfor/ssl/发现了一个shell文件夹，然后发现了sslservice.sh这个脚本，于是运行一下，发现一直报错，如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;loading&lt;/span&gt; &lt;span class="n"&gt;shared&lt;/span&gt; &lt;span class="n"&gt;libraries:&lt;/span&gt; &lt;span class="n"&gt;libstdc&lt;/span&gt;&lt;span class="o"&gt;++.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cannot&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt; &lt;span class="n"&gt;shared&lt;/span&gt;
&lt;span class="n"&gt;object&lt;/span&gt; &lt;span class="n"&gt;file:&lt;/span&gt; &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;such&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ok，共享库的问题，于是google之，笔者找到了解决方法，运行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;libstdc&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;  
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;lib32stdc&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装这个依赖包，再次访问rvpn，一切正常。&lt;/p&gt;
&lt;h2&gt;小结&lt;/h2&gt;
&lt;p&gt;RVPN在windows下很easy，特别是有IE浏览器这种所有开发必须兼容的强大浏览器。&lt;/p&gt;
&lt;p&gt;而Ubuntu下其实Firefox/Chrome也都是支持的，可惜Chrome升级35版后放弃了对Java插件的支持。&lt;/p&gt;
&lt;p&gt;RVPN在windows和Ubuntu下倒腾了两天，想来这种东西常常是某人按官网流程来一遍就所有OK，某人搞了N久却一直搞不定的东西。所以这种东西总是不能一味照着别人的步子重复的，还是要搞的时候思路清楚，把握其中的原理，然后借助强大的google，问题就迎刃而解了！&lt;/p&gt;</summary><category term="linux"></category><category term="java plugin"></category><category term="rvpn"></category></entry><entry><title>ubuntu12.04安装vim7.4 with lua的心酸历程</title><link href="mirsking.tk/tools-configuration/ubuntu12-04-vim7-4-with-lua.html" rel="alternate"></link><updated>2014-05-09T19:42:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-05-09:mirsking.tk/tools-configuration/ubuntu12-04-vim7-4-with-lua.html</id><summary type="html">&lt;p&gt;因团队需要，忍痛抛弃了ubuntu14.04 LTS，改回ubuntu12.04，允许我吐槽一分钟：&lt;/p&gt;
&lt;p&gt;第一就是搜狗和麒麟合力打造的新版linux版输入法，简单&lt;code&gt;sudo dpkg -i&lt;/code&gt;，结果到ubuntu12.04这却要ppa升级fcitx。升级玩的fcitx却各种不稳定，不定时抽风，然后整个输入法就甭想了。&lt;/p&gt;
&lt;p&gt;第二是今天的重点，ubuntu14.04安装vim 7.4直接一个&lt;code&gt;sudo apt-get install vim&lt;/code&gt;就ok了，结果到12.04这，偏偏要给你装vim 7.3。vim
7.3也就算了，偏偏低于vim 7.3.885。结果就是悲剧的无法使用大名鼎鼎的&lt;strong&gt;&lt;a href="https://github.com/Shougo/neocomplete.vim"&gt;neocomplete.vim&lt;/a&gt;&lt;/strong&gt;插件。本来以为找到了终极的YouCompleteMe插件，结果发现YouCompleteMe是依赖neocomplete.vim的。&lt;/p&gt;
&lt;p&gt;本来吧，在ubuntu12.04上装vim 7.4也不是什么难事，ppa升级，或者编译进去都OK，可惜ppa升级又没办法开lua。于是乎，在没有lua的情况下使用neocomplete就会崩溃的发现插入模式下每按一次enter，你就会得到&lt;/p&gt;
&lt;p&gt;E117: 未定义的函数: neocomplcache#enable&lt;/p&gt;
&lt;p&gt;这样的错误。接着就要连按几下enter等待这个错误提示结束，然后光标的位置就会多出一个0来。忍了两天终于忍无可忍，于是乎怒了重新装带有lua的vim 7.4。于是乎有了这篇文章。&lt;/p&gt;
&lt;p&gt;OK，吐槽结束，转入这个正题，在ubuntu12.04上装带有lua的vim 7.4教程：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;remove&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;runtime&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gnome&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tiny&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;common&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gui&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;common&lt;/span&gt;  
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;purge&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;runtime&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gnome&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tiny&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;common&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gui&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;common&lt;/span&gt;  
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dep&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gnome&lt;/span&gt;  
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;luajit&lt;/span&gt; &lt;span class="n"&gt;libluajit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;5.1&lt;/span&gt; &lt;span class="n"&gt;libncurses5&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;libgnome2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;libgnomeui&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;libgtk2&lt;/span&gt;&lt;span class="mf"&gt;.0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;libatk1&lt;/span&gt;&lt;span class="mf"&gt;.0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;libbonoboui2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;libcairo2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;libx11&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;libxpm&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;libxt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;ruby&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;mercurial&lt;/span&gt;  
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="sr"&gt;/usr/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;ln&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;luajit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.0.0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;beta9&lt;/span&gt; &lt;span class="n"&gt;luajit&lt;/span&gt;  
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;  
&lt;span class="n"&gt;hg&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;https:&lt;/span&gt;&lt;span class="sr"&gt;//co&lt;/span&gt;&lt;span class="n"&gt;de&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="sr"&gt;/p/&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;  
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;

&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;configure&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;huge&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;  
&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cscope&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;  
&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rubyinterp&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;  
&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;largefile&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;  
&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;disable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;netbeans&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;  
&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pythoninterp&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;  
&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sr"&gt;/usr/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="sr"&gt;/python2.7/co&lt;/span&gt;&lt;span class="n"&gt;nfig&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;  
&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;perlinterp&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;  
&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;luainterp&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;  
&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;luajit&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fail&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;  
&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lua&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;prefix&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;  
&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gui&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;gnome2&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cscope&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;prefix&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;

&lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;VIMRUNTIMEDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sr"&gt;/usr/s&lt;/span&gt;&lt;span class="n"&gt;hare&lt;/span&gt;&lt;span class="sr"&gt;/vim/&lt;/span&gt;&lt;span class="n"&gt;vim74&lt;/span&gt;  
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;命令很简单，卸载，依赖处理，装依赖，编译vim7.4（加入lua参数）。终于可以爽爽的用vim了。&lt;/p&gt;</summary><category term="Linux"></category><category term="ubuntu"></category><category term="程序员"></category></entry><entry><title>基于DMP的目标在线跟踪、在线避障机械臂</title><link href="mirsking.tk/collections/dmp-clmc.html" rel="alternate"></link><updated>2014-04-18T21:23:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-04-18:mirsking.tk/collections/dmp-clmc.html</id><summary type="html">&lt;p&gt;算一算，大概有一个月没有写博客了。&lt;/p&gt;
&lt;p&gt;这一个月，从DMP模型的学习到仿真再到正在进行中的实物实现，毕设也算是有些进展。&lt;/p&gt;
&lt;p&gt;可惜自身技术太欠缺，一路走来坎坎坷坷。&lt;/p&gt;
&lt;p&gt;每每走到死胡同，看不到未来，都会拿出下面CLMC实验室的两个视频，膜拜一番，然后鼓励自己在这条路上且行且远。&lt;/p&gt;
&lt;p&gt;分享出来，给大家见识见识，更是对自己莫大的激励。&lt;/p&gt;
&lt;p&gt;好了，废话不多说，上视频！&lt;/p&gt;
&lt;div align="center"&gt;

#### 自适应避障端杯子

&lt;/div&gt;

&lt;div align="center"&gt;

[youku id="XNzAwNjU5MzA0"]

&lt;/div&gt;

&lt;div align="center"&gt;

#### 自适应避障端杯子倒水

&lt;/div&gt;

&lt;div align="center"&gt;

[youku id="XNzAwNjU5NjI0"]

&lt;/div&gt;</summary><category term="robot"></category></entry><entry><title>Matlab绘制各种动态心形图并保存为Gif</title><link href="mirsking.tk/programing/use-matlab-to-draw-and-save-a-cool-gif-dynamic-photo.html" rel="alternate"></link><updated>2014-03-20T22:33:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-03-20:mirsking.tk/programing/use-matlab-to-draw-and-save-a-cool-gif-dynamic-photo.html</id><summary type="html">&lt;p&gt;“码农”，这个自从接触编程，就永远不可能丢掉的头衔，让多少程序猿痛并快乐着。&lt;/p&gt;
&lt;p&gt;作为码农中的一员，却也时常给自己找些乐趣，比如最近很火的&lt;a href="http://gabrielecirulli.github.io/2048/"&gt;2048游戏&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;又比如：用Matlab画出一些漂亮的图片。先放一张图（注意，点击图片可以看到动态图哦）：&lt;/p&gt;
&lt;p&gt;&lt;a href="mirsking.tk/images/heart-beats.gif"&gt;&lt;img alt="heart-beats" src="mirsking.tk/images/heart-beats.gif" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;还不错吧，下面就贴出源代码，造福大家：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;clc&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;  
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="nv"&gt;%200&lt;/span&gt;&lt;span class="err"&gt;这个值越大，则画面越细腻&lt;/span&gt;  
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;meshgrid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;I1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;.\^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="sr"&gt;/4\*Y.\^2+Z.\^2-1).\^3-X.\^2.\*Z.\^3-9/&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;.\^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;.\*&lt;/span&gt;&lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="o"&gt;.\^&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;patch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isosurface&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;I1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;  
&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;FaceColor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;EdgeColor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;none&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;axis&lt;/span&gt; &lt;span class="n"&gt;equal&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="n"&gt;axis&lt;/span&gt; &lt;span class="n"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="n"&gt;light&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Posi&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt; &lt;span class="err"&gt;在(&lt;/span&gt;&lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;点处建立一个光源&lt;/span&gt;  
&lt;span class="n"&gt;lighting&lt;/span&gt; &lt;span class="n"&gt;phong&lt;/span&gt;  
&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gca&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;nextplot&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;replacechildren&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="nv"&gt;%&lt;/span&gt; &lt;span class="err"&gt;记录电影&lt;/span&gt;  
&lt;span class="nv"&gt;XX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;XData&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;YY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;YData&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;ZZ&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ZData&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;  
&lt;span class="n"&gt;scale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;XData&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;XX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;YData&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;YY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ZData&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;ZZ&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;drawnow&lt;/span&gt;  
&lt;span class="n"&gt;MakeGif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;heart-beats.gif&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;end&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里要调用MakeGif这个函数，如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;%% MakeGif save the pictures in the figure window to a dynamic photo.  &lt;/span&gt;
&lt;span class="c"&gt;% example:  &lt;/span&gt;
&lt;span class="c"&gt;% MakeGif(filename,i)  &lt;/span&gt;
&lt;span class="c"&gt;% filename is photo&amp;#39;s name you want to save with a extension name of  &lt;/span&gt;
&lt;span class="c"&gt;% gif.  &lt;/span&gt;
&lt;span class="c"&gt;% i means the ith picture of the dynamic photo. That&amp;#39;s to say when  &lt;/span&gt;
&lt;span class="c"&gt;% you plot the ith picture, use MakeGif(filename,i) to save it, and  &lt;/span&gt;
&lt;span class="c"&gt;% after you finish the plot, the photo will contain all your picture.  &lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;MakeGif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;filename,i&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getframe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gcf&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;imind&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;frame2im&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;imind&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rgb2ind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imind&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;256&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;1  
&lt;span class="n"&gt;imwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imind&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;gif&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;Loopcount&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;inf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;DelayTime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;05&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c"&gt;%感觉时间太短改这个，但是储存就很卡  &lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;  

&lt;span class="n"&gt;imwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imind&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;gif&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;WriteMode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;append&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;DelayTime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;1&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c"&gt;%感觉时间太短改这个，但是储存就很卡  &lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;  
&lt;span class="k"&gt;end&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;大量的注释，我就不多解释了。其原理就是每帧图像转换为index型图像数据存入gif文件中。&lt;/p&gt;
&lt;p&gt;怎么样？不过瘾？再来一个（注意，点击图片可以看到动态图哦）：  &lt;/p&gt;
&lt;p&gt;&lt;a href="mirsking.tk/images/heart-waves.gif"&gt;&lt;img alt="heart-waves" src="mirsking.tk/images/heart-waves.gif" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;同样附上源码：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;close&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;  
&lt;span class="n"&gt;clear&lt;/span&gt;  
&lt;span class="n"&gt;clc&lt;/span&gt;  
&lt;span class="n"&gt;Times&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;meshgrid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.01&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Times&lt;/span&gt;  
&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;(:,:,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.\^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;.\*&lt;/span&gt;&lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="o"&gt;.\*&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;.\^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.\*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="n"&gt;end&lt;/span&gt;  
&lt;span class="n"&gt;figure&lt;/span&gt;  
&lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;  
&lt;span class="n"&gt;hold&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;  
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Times&lt;/span&gt;  
&lt;span class="n"&gt;mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;(:,:,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;  
&lt;span class="n"&gt;drawnow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="n"&gt;MakeGif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;heart-waves.gif&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;hold&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;  
&lt;span class="n"&gt;end&lt;/span&gt;  
&lt;span class="n"&gt;hold&lt;/span&gt; &lt;span class="n"&gt;off&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;同样是调用MakeGif函数。&lt;/p&gt;
&lt;p&gt;总结一下，核心有两个：&lt;br /&gt;
1）构造漂亮的函数&lt;br /&gt;
2）画图，每一帧调用一次MakeGif保存为动态图  &lt;/p&gt;
&lt;p&gt;关于如何构造漂亮的函数，突然让我想到了笛卡尔的心型曲线了，什么时候有机会去搞搞。&lt;/p&gt;</summary><category term="Matlab"></category><category term="程序员"></category></entry><entry><title>Visual Studio添加Armadillo线性代数库实现矩阵运算</title><link href="mirsking.tk/tools-configuration/add-armadillo-linear-algebra-library-for-visual-studio.html" rel="alternate"></link><updated>2014-03-16T10:05:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-03-16:mirsking.tk/tools-configuration/add-armadillo-linear-algebra-library-for-visual-studio.html</id><summary type="html">&lt;p&gt;Armadillo是一个C++开发的线性代数库，其可以使用LAPACK进行加速，从而取得了速度和易用性上的平衡。从而可以方便高效地把Matlab中的程序方便地移植到C++中。  &lt;/p&gt;
&lt;p&gt;Armadillo也提供了python的接口armanpy。同时在Armadillo基础上也开发了许多实用的包，如用于快速机器学习的MLPACK。&lt;br /&gt;
详细介绍可以看官网：&lt;a href="http://arma.sourceforge.net/"&gt;Armadillo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;由于最近做毕设需要将Matlab的算法移植到C++上，所以安装了这个库，虽然简单，却也学习到了一些东西。  &lt;/p&gt;
&lt;p&gt;下面是安装过程及一些要注意的，记录一下，方便以后查阅。有需要的童鞋也可以一步一步跟着做一做。&lt;/p&gt;
&lt;h3&gt;到官网下载Armadillo的源文件&lt;/h3&gt;
&lt;p&gt;这里要注意的是，今天为止最新的版本是armadillo-4.100.2.tar.gz。而4.0以后的版本貌似只支持visual studio 2010以上的编译器，如果使用的是visual studio 2008的编译器，会提示编译器版本过低。所以像我这样不得不用2008的就只能下载低版本：我使用的是armadillo-3.920.4.tar.gz，测试可用。下边是下载链接。  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://sourceforge.net/projects/arma/files/armadillo-3.930.4.tar.gz/download"&gt;armadillo-3.930.4.tar.gz（2008可用）&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://sourceforge.net/projects/arma/files/armadillo-4.100.2.tar.gz/download"&gt;armadillo-4.100.2.tar.gz（2010以上版本可用）&lt;/a&gt;  &lt;/p&gt;
&lt;h3&gt;安装方法&lt;/h3&gt;
&lt;p&gt;以armadillo-3.930.4.tar.gz为例，下载完成后直接解压到任意目录，比如：X:/armadillo-3.930.4/&lt;br /&gt;
将X:/armadillo-3.930.4/include加入到visual studio 包含文件目录中，VS2008 是在 “工具-&gt;选项-&gt;VC++目录-&gt;包含文件”这里设置；vs2013则更改到了项目属性页中。&lt;/p&gt;
&lt;h3&gt;安装 LAPACK&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://icl.cs.utk.edu/lapack-for-windows/lapack/index.html"&gt;官网地址&lt;/a&gt; 但是其需要单个文件单独下载，而且下载速度不敢恭维。所以我这里打包上传到了百度网盘，下载请&lt;a href="http://pan.baidu.com/s/1o6I1Mxc"&gt;点击&lt;/a&gt;。压缩包中有WIN32位和WIN64位两种dll和lib文件，可以根据需要选择。  &lt;/p&gt;
&lt;p&gt;下载后，同样解压到任意文件夹，如：X:\Lapack\&lt;br /&gt;
以WIN32为例：&lt;br /&gt;
将X:\Lapack\WIN32添加到visual studio 库文件目录中，方法同上。&lt;/p&gt;
&lt;h3&gt;打开Armadillo的LAPACK&lt;/h3&gt;
&lt;p&gt;功能（armadillo4.0以上的版本，默认打开，请直接跳过）。  &lt;/p&gt;
&lt;p&gt;打开X:/armadillo-3.930.4/include\armadillo_bits目录中的config.hpp文件。&lt;br /&gt;
找到并将以下两行前的注释去掉，改为：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="c"&gt;#define ARMA_USE_LAPACK  &lt;/span&gt;
 &lt;span class="c"&gt;#define ARMA_USE_BLAS&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;写个测试程序&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="c1"&gt;#include &amp;lt;iostream&amp;gt;  &lt;/span&gt;
 &lt;span class="c1"&gt;#include &amp;lt;armadillo&amp;gt;  &lt;/span&gt;
 &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
 &lt;span class="p"&gt;{&lt;/span&gt;  
 &lt;span class="nn"&gt;arma::&lt;/span&gt;&lt;span class="n"&gt;mat&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;arma::&lt;/span&gt;&lt;span class="n"&gt;randu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
 &lt;span class="nn"&gt;arma::&lt;/span&gt;&lt;span class="n"&gt;mat&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;arma::&lt;/span&gt;&lt;span class="n"&gt;inv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
 &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;A = \n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
 &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;inv（A） = \n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
 &lt;span class="p"&gt;}&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在项目属性中的链接器中添加 libblas.lib，liblapack.lib，liblapacke.lib 编译生成。  &lt;/p&gt;
&lt;p&gt;这里要特别注意一点，就是在运行前要将X:\Lapack\WIN32目录中的三个dll以及X:\Lapack\目录中的两个dll拷贝到生成的.exe对应目录中，否则在运行时会提示缺少dll，而报错。&lt;/p&gt;
&lt;p&gt;好了，尽情享受Armadillo线性代数库带来的matlab算法移植的便捷吧！&lt;/p&gt;</summary><category term="Windows"></category><category term="Matlab"></category><category term="VC++"></category><category term="程序员"></category></entry><entry><title>Timo VS Kuka人机乒乓巅峰对决</title><link href="mirsking.tk/collections/timo-vs-kuka.html" rel="alternate"></link><updated>2014-03-13T20:11:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-03-13:mirsking.tk/collections/timo-vs-kuka.html</id><summary type="html">&lt;p&gt;3月11日中午12点，官网如期放出了kuka与timo的对战视频，可惜源是&lt;code&gt;you~tu~be&lt;/code&gt;的。&lt;br /&gt;
做了个搬运工，官网下载——&gt;优酷上传，造福国内。&lt;br /&gt;
视频前35秒是重复的预告视频，可以直接快进到00分35秒看。&lt;br /&gt;
另外3分32秒，亮瞎双眼！&lt;/p&gt;
&lt;p&gt;[youku id="XNjgzNjY4ODMy"]&lt;/p&gt;
&lt;p&gt;最后推荐两个在线视频转码下载的网站。  &lt;/p&gt;
&lt;p&gt;1）国内：http://www.flvxz.com/
飞驴下载，支持优酷、土豆、i奇艺等等国内视频网站。  &lt;/p&gt;
&lt;p&gt;2）国外：http://www.clipconverter.cc/ 支持you\~tu\~be  &lt;/p&gt;
&lt;p&gt;使用方法很简单，直接将对应网站的视频地址复制到这两个网站的输入框中，然后就是分析-（转码）-下载喽。&lt;/p&gt;</summary><category term="robot"></category></entry><entry><title>KuKa机器手与人类Timo的乒乓对决</title><link href="mirsking.tk/collections/kuka-vs-timo.html" rel="alternate"></link><updated>2014-02-22T13:51:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-02-22:mirsking.tk/collections/kuka-vs-timo.html</id><summary type="html">&lt;p&gt;2014年3月11日Kuka出品的机器人将要跟德国乒乓选手Timo在上海对决，以庆祝Kuka 在上海西南部开设新工厂。&lt;/p&gt;
&lt;p&gt;此次比赛的预告片看起来相当振奋忍心，值得期待！&lt;br /&gt;
官网地址为http://www.kuka-timoboll.com/。&lt;/p&gt;
&lt;p&gt;但由于墙的原因，官网上的预告视频无法观看。&lt;br /&gt;
以下是转到优酷的预告片：&lt;/p&gt;
&lt;p&gt;[youku id="XNjc0NDk0NTA4"]&lt;/p&gt;</summary><category term="robot"></category><category term="Robotics Toolbox"></category></entry><entry><title>你绝不知道的Linux中极好用的命令</title><link href="mirsking.tk/programing/the-best-commands-you-never-knew-about-in-linux.html" rel="alternate"></link><updated>2014-02-18T17:50:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-02-18:mirsking.tk/programing/the-best-commands-you-never-knew-about-in-linux.html</id><summary type="html">&lt;h2&gt;引子&lt;/h2&gt;
&lt;p&gt;最近发现了一个很好玩的网站Quora。&lt;/p&gt;
&lt;p&gt;该网站的立意是：to share and grow the world's knowledge.&lt;/p&gt;
&lt;p&gt;而其实现途径则是：Ask any question, get real answers from people with
first hand experience, and blog about what you know.&lt;/p&gt;
&lt;p&gt;也就是说任何人可以发布自己的问题，然后由一群高智商、丰富经验的网友来答疑解难从而助力知识大爆发。&lt;/p&gt;
&lt;p&gt;听起来类似百度知道，但上边的问题和解答，个人感觉比百度知道的水平要高许多。&lt;/p&gt;
&lt;h2&gt;正文&lt;/h2&gt;
&lt;p&gt;好了，闲话休题。下边来为大家介绍在上面看到的一个好帖：《&lt;a href="http://www.quora.com/Jordan-Goldman-4/Posts/The-Best-Commands-You-Never-Knew-About-in-Linux?srid=toPT&amp;amp;share=1" title="The Best Commands You Never Knew About in Linux"&gt;The Best Commands You Never Knew About in Linux&lt;/a&gt;》。所以将其转过来，帮助自己提高，也推荐给大家。&lt;/p&gt;
&lt;p&gt;大家不得不承认，即使是最好的系统管理员也可能从未听说过一到两个好用的命令。下边这些命令，大家可以试一试，我保证他们会节约你的时间，至少会让你感到这些命令好酷！&lt;/p&gt;
&lt;p&gt;column——效果是把输入排列成多列。&lt;/p&gt;
&lt;p&gt;试一试：mount | column –t&lt;/p&gt;
&lt;p&gt;dstat——系统集成检测。快速地告诉你CPU、硬盘、带宽的使用情况等等。&lt;/p&gt;
&lt;p&gt;试一试：dstat -a&lt;/p&gt;
&lt;p&gt;tac——cat命令的逆操作。将输出保存成一个文件。&lt;/p&gt;
&lt;p&gt;试一试：tac \&amp;lt;文件名&gt;&lt;/p&gt;
&lt;p&gt;ctrl + r——查询你使用过的命令历史。如果你忘记了曾经精心输入的长命令，那么试试ctrl+r吧。&lt;/p&gt;
&lt;p&gt;watch——在y段时间内，没间隔x秒执行一个命令。&lt;/p&gt;
&lt;p&gt;试一试：watch –interval 3 df –h&lt;/p&gt;
&lt;p&gt;!\$——存储上一个命令的最后一个参数的值。&lt;/p&gt;
&lt;p&gt;试一试：cat \&amp;lt;文件名&gt;|echo !\$&lt;/p&gt;
&lt;p&gt;htop——交互的进程查看器（用来替代top），如果你想杀掉进程列表中的某个进程，那么htop值得一试。&lt;/p&gt;
&lt;p&gt;diff3——或许你用过diff命令，但是你曾经需要比较三个文件的不同吗？试试这个命令吧。&lt;/p&gt;
&lt;p&gt;cal——在命令窗中工作了许久，想快速看下日历？输入cal看看发生了什么把。&lt;/p&gt;
&lt;h2&gt;结语&lt;/h2&gt;
&lt;p&gt;文中提到了一些很奇怪的命令，正因为奇进而我们可能见到的机会比较小。但是有一部分命令如果熟练用起来还是不错的，比如：ctrl+r，比如tac。当然文中列出的命令只是linux庞大命令库的凤毛麟角，欢迎大家回帖分享大家喜欢的命令！&lt;/p&gt;</summary><category term="Linux"></category><category term="Bash"></category></entry><entry><title>Robotics Toolbox for MATLAB学习笔记（二）</title><link href="mirsking.tk/programing/learning-robotics-toolbox-for-matlab2.html" rel="alternate"></link><updated>2014-02-14T18:23:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-02-14:mirsking.tk/programing/learning-robotics-toolbox-for-matlab2.html</id><summary type="html">&lt;p&gt;距离上次写学习笔记已经一个星期了，最近懒惰了，呵呵。重新走起！今天虽然是情人节+元宵节，但是学习丝毫不能落下。下面言归正传：&lt;/p&gt;
&lt;p&gt;首先贴出&lt;a href="http://www.mirsking.com/programingalgorithm/learning-robotics-toolbox-for-matlab/" title="Robotics Toolbox for MATLAB学习笔记（一）"&gt;Robotics Toolbox for MATLAB学习笔记（一）&lt;/a&gt;的地址（点击链接直达）。&lt;/p&gt;
&lt;p&gt;第三天（2014,2,14）操作臂逆运动学总结&lt;/p&gt;
&lt;h2&gt;操作臂逆运动学之——ikine()函数的学习&lt;/h2&gt;
&lt;p&gt;首先总结下前几天学习但没有总结的操作臂逆运动学函数ikine()。&lt;/p&gt;
&lt;p&gt;所谓逆运动学是由操作臂的位姿求取对应的角坐标参数。&lt;/p&gt;
&lt;p&gt;robotics工具箱中有ikine()函数可以方便实现。同时对于puma560这种六自由度的操作臂，还有更方便的ikine6s()函数。&lt;/p&gt;
&lt;h3&gt;ikine6s()函数的参数&lt;/h3&gt;
&lt;p&gt;由于逆运动学解的不唯一性，ikine6s()函数提供了一些参数以限定解的形式。如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="n"&gt;handed&lt;/span&gt;    &lt;span class="s"&gt;&amp;#39;l&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;  
&lt;span class="n"&gt;elbow&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;down&lt;/span&gt;    &lt;span class="s"&gt;&amp;#39;u&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;  
&lt;span class="n"&gt;wrist&lt;/span&gt; &lt;span class="n"&gt;flipped&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;flipped&lt;/span&gt;    &lt;span class="s"&gt;&amp;#39;f&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;另外，如果无解，则该函数会返回NaN&lt;/p&gt;
&lt;h3&gt;ikine()函数的参数&lt;/h3&gt;
&lt;p&gt;而对于ikine()函数。其调用形式有三种，如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ikine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ikine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Q0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OPTIONS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ikine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Q0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OPTIONS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中，T是位姿矩阵；Q0是角坐标的初始估计；M是Mask矩阵，使用它表示只取矩阵中为1对应的角度。&lt;/p&gt;
&lt;p&gt;而OPTIONS参数比较多。如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="s"&gt;&amp;#39;pinv&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="n"&gt;pseudo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;inverse&lt;/span&gt; &lt;span class="n"&gt;instead&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;Jacobian&lt;/span&gt; &lt;span class="n"&gt;transpose&lt;/span&gt;  
&lt;span class="s"&gt;&amp;#39;ilimit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;maximum&lt;/span&gt; &lt;span class="n"&gt;iteration&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="s"&gt;&amp;#39;tol&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;tolerance&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="n"&gt;norm&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt; &lt;span class="mf"&gt;1e-6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="s"&gt;&amp;#39;alpha&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="n"&gt;gain&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="s"&gt;&amp;#39;novarstep&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;disable&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;  
&lt;span class="s"&gt;&amp;#39;verbose&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;each&lt;/span&gt; &lt;span class="n"&gt;point&lt;/span&gt;  
&lt;span class="s"&gt;&amp;#39;verbose=2&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="nb"&gt;each&lt;/span&gt; &lt;span class="n"&gt;iteration&lt;/span&gt;  
&lt;span class="s"&gt;&amp;#39;plot&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt; &lt;span class="n"&gt;iteration&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="n"&gt;versus&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;好了，今天的逆运动学函数就总结到这里，最后的参数没来得及翻译，下次有机会再补上吧。&lt;/p&gt;
&lt;p&gt;另外，下一阶段将进行，轨迹规划相关内容的学习和总结。监督自己加把劲吧！&lt;/p&gt;</summary><category term="Matlab"></category><category term="Robotics Toolbox"></category></entry><entry><title>wordpress后台找回google authenticator验证码</title><link href="mirsking.tk/blog/find-google-authenticators-code-in-wordpresss-login-page.html" rel="alternate"></link><updated>2014-02-07T09:52:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-02-07:mirsking.tk/blog/find-google-authenticators-code-in-wordpresss-login-page.html</id><summary type="html">&lt;p&gt;Wordpress中安装google
authenticator插件，可以极大地增强wordpress的后台安全性。该插件的安装及设置，google一下就可以找到一大片，所以笔者在这里就不再累赘。&lt;/p&gt;
&lt;p&gt;而本文所要解决的问题则是：如果在手机上误删了google身份验证器，或者其他刷机等原因导致无法获取google
authenticator的验证码而无法登录wordpress后台怎么办？&lt;/p&gt;
&lt;p&gt;笔者这两天手残电脑、手机同时刷了系统，无奈无法获得验证码而失去了本博客的后台。Google之却未曾找到解决方案。于是乎发挥自己的聪明才智，找到了简单的解决方案。闲话休提，下面笔者将此方案介绍给大家，以造福互联网。&lt;/p&gt;
&lt;p&gt;首先，我们虽然没有了wordpress后台的进入权限，但是我们有数据库的权限，所以登入wordpreess数据库的后台。然后，找到数据库中的wp_usermeta表，在其中，我们可以发现大量关于google
authenticator的字段：如图&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.mirsking.com/wp-content/uploads/2014/02/googleauthenticator.bmp"&gt;&lt;img alt="googleauthenticator" src="http://www.mirsking.com/wp-content/uploads/2014/02/googleauthenticator.bmp" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其中googleauthenticator_description和googleauthenticator_secret是我们这次要用到的字段。他们就是手机端google身份验证器所需要的帐号和密码。在手机上输入完成后即可得到自己想要的验证码了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PS.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当时看到googleauthenticator_enabled这个字段，猜测如果把它的值由enabled改为disabled是否就直接可以免去验证码这一步。但是试了上文的方法后，就没再尝试。有兴趣的朋友可以一试。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总结一下&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;总之，wordpress所有内容都保存在数据库中，所以只要出现问题，到数据库中一定可以找到解决方案，当然前提是保存好你的数据库登录口令，如果连这个也丢掉了，那就呜呼哀哉了....&lt;/p&gt;</summary><category term="google二次验证"></category><category term="WordPress"></category></entry><entry><title>Robotics Toolbox for MATLAB学习笔记（一）</title><link href="mirsking.tk/programing/learning-robotics-toolbox-for-matlab.html" rel="alternate"></link><updated>2014-02-05T10:03:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-02-05:mirsking.tk/programing/learning-robotics-toolbox-for-matlab.html</id><summary type="html">&lt;p&gt;Robotics Toolbox for MATLAB是由Peter I. Corke编写的第三方工具箱。提供了机器人轨迹规划的各种函数。&lt;/p&gt;
&lt;p&gt;从今天开始要学习该工具箱并能熟练掌握。本文将记录每日的学习进度，以供将来查阅。&lt;/p&gt;
&lt;h3&gt;第一天（2014,2,5）Robotics Toolbox的安装与简单函数的学习&lt;/h3&gt;
&lt;p&gt;根据&lt;a href="http://www.petercorke.com/Robotics_Toolbox.html"&gt;官网的说明&lt;/a&gt;，安装步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download it from here in zip format (.zip).&lt;/li&gt;
&lt;li&gt;The Toolbox is tested with MATLAB R2011a.&lt;/li&gt;
&lt;li&gt;To install the Toolbox simply unpack the archive which will create
    the directory (folder) rvctools, and within that the directories
    robot, simulink, and common.&lt;/li&gt;
&lt;li&gt;Adjust your MATLABPATH to include rvctools Execute the startup file
    rvctools/startup_rvc.m and this will place the correct directories
    in your MATLAB path.&lt;/li&gt;
&lt;li&gt;Run the demo rtbdemo to see what it can do&lt;/li&gt;
&lt;li&gt;To get the MEX version of rne visit the folder rvctools/robot/mex
    and follow the directions in the README file&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;安装完成后，即可正常使用工具箱中的相关函数。本次测试了以下几个简单函数：rotx，roty，rotz，rpy2tr，tr2rpy等几个函数。&lt;/p&gt;
&lt;p&gt;这里简单介绍下rpy2tr函数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RPY2R&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RPY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OPTIONS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;orthonormal&lt;/span&gt; &lt;span class="n"&gt;rotation&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;  
&lt;span class="n"&gt;equivalent&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="err"&gt;  &lt;/span&gt;&lt;span class="n"&gt;specified&lt;/span&gt; &lt;span class="n"&gt;roll&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pitch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yaw&lt;/span&gt; &lt;span class="n"&gt;angles&lt;/span&gt;  
&lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="n"&gt;correspond&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;rotations&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt; &lt;span class="n"&gt;axes&lt;/span&gt; &lt;span class="n"&gt;respectively&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="n"&gt;If&lt;/span&gt; &lt;span class="n"&gt;RPY&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;multiple&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt; &lt;span class="n"&gt;they&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;assumed&lt;/span&gt; &lt;span class="n"&gt;torepresent&lt;/span&gt;  
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;trajectory&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;three&lt;/span&gt; &lt;span class="n"&gt;dimensional&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
&lt;span class="n"&gt;where&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;last&lt;/span&gt; &lt;span class="nb"&gt;index&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;corresponds&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;RPY&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;就是说R = RPY2R(RPY, OPTIONS)是将欧拉角RPY（这个RPY是由分别绕X、Y、Z轴旋转的角度roll、pitch、yaw表示的）转换为旋转矩阵。如果RPY是多列矩阵，那么结果R表示的是最后一次的旋转矩阵。&lt;/p&gt;
&lt;p&gt;另外这个函数有两个选项，‘deg’表示以度数为单位输入；‘zyx’表示按Z、Y、X轴旋转得到旋转矩阵。&lt;/p&gt;
&lt;h3&gt;第二天（2014,2,7）Link() SerialLink()  fkine()函数学习&lt;/h3&gt;
&lt;h4&gt;link函数的调用格式&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;alphaD&lt;/span&gt; &lt;span class="n"&gt;sigma&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt; &lt;span class="n"&gt;sigma&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;CONVENTION&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt; &lt;span class="n"&gt;sigma&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;CONVENTION&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt; &lt;span class="n"&gt;sigma&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;CONVENTION&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参数CONVENTION可以取‘standard’和‘modified’，其中‘standard’代表采用标准的D-H参数，‘modified’代表采用改进的D-H参数。参数‘alpha’代表扭转角，参数‘A’代表杆件长度，参数‘theta’代表关节角，参数‘D’代表横距，参数‘sigma’代表关节类型：0代表旋转关节，非0代表移动关节。另外LINK还有一些数据域：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回扭转角&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回杆件长度&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回关节角&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回横距&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sigma&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回关节类型&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RP&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回‘&lt;/span&gt;&lt;span class="nv"&gt;R&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;旋转&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;或‘&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;移动&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mdh&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;若为标准&lt;/span&gt;&lt;span class="nv"&gt;D&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="err"&gt;参数返回&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="err"&gt;，否则返回&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;offset&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回关节变量偏移&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;qlim&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回关节变量的上下限&lt;/span&gt; &lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;min&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;islimit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;如果关节变量超限，返回&lt;/span&gt; &lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回一个&lt;/span&gt;&lt;span class="nv"&gt;3&lt;/span&gt;&lt;span class="err"&gt;×&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="err"&gt;对称惯性矩阵&lt;/span&gt;

&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回关节质量&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回&lt;/span&gt;&lt;span class="nv"&gt;3&lt;/span&gt;&lt;span class="err"&gt;×&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;的关节齿轮向量&lt;/span&gt;

&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回齿轮的传动比&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Jm&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回电机惯性&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回粘性摩擦&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tc&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回库仑摩擦&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dh&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;legacy&lt;/span&gt; &lt;span class="n"&gt;DH&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;

&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dyn&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;legacy&lt;/span&gt; &lt;span class="n"&gt;DYN&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;特别要注意的是Link函数的参数顺序在新版本的Toolbox中发生了变换，由之前的L
= LINK([alpha A theta D])变为L = LINK([theta D  A  alpha ])&lt;/p&gt;
&lt;h4&gt;SerialLink函数的调用格式&lt;/h4&gt;
&lt;p&gt;顾名思义，该函数是将多个由Link生成的连杆连接起来。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;bot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SerialLink&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;L1&lt;/span&gt; &lt;span class="n"&gt;L2&lt;/span&gt; &lt;span class="n"&gt;L3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;my robot&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果连杆是由L1 L2 等表示，则按照上式调用。&lt;/p&gt;
&lt;p&gt;或者连杆有L(1) L(2)等表示，则可简洁地表示为&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;bot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SerialLink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;my robot&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;fkine函数的调用格式&lt;/h4&gt;
&lt;p&gt;fkine函数是用来计算操作臂正向运动矩阵（forward kinematics），其调用格式为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fkine&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="sr"&gt;/4 -pi/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;该式表示将&lt;/span&gt;&lt;span class="nv"&gt;bot&lt;/span&gt;&lt;span class="err"&gt;操作臂的两个连杆分别旋转&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="sr"&gt;/4和 -pi/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="err"&gt;。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;plot函数的调用格式&lt;/h4&gt;
&lt;p&gt;SerialLink函数还有一个plot方法，该方法可以直观地将操作臂的运动状态以图形的形式表示。其调用方式和fkine函数类似。&lt;/p&gt;</summary><category term="Matlab"></category><category term="Robotics Toolbox"></category><category term="程序员"></category></entry><entry><title>程序员技术练级攻略</title><link href="mirsking.tk/career/build-your-programming-technical-skills.html" rel="alternate"></link><updated>2014-01-15T14:26:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-01-15:mirsking.tk/career/build-your-programming-technical-skills.html</id><summary type="html">&lt;div class="alert alert-info"&gt;

#### 前言

&lt;/div&gt;

&lt;p&gt;你是否觉得自己从学校毕业的时候只做过小玩具一样的程序？&lt;wbr&gt;&lt;/wbr&gt;走入职场后哪怕没有什么经验也可以把以下这些课外练习走一遍（朋友的抱怨：学校课程总是从理论出发，&lt;wbr&gt;&lt;/wbr&gt;作业项目都看不出有什么实际作用，不如从工作中的需求出发）&lt;/p&gt;
&lt;p&gt;建议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不要乱买书，不要乱追新技术新名词，&lt;wbr&gt;&lt;/wbr&gt;基础的东西经过很长时间积累而且还会在未来至少10年通用。&lt;/li&gt;
&lt;li&gt;回顾一下历史，看看历史上时间线上技术的发展，你才能明白明天会是什么样。&lt;/li&gt;
&lt;li&gt;一定要动手，例子不管多么简单，&lt;wbr&gt;&lt;/wbr&gt;建议至少自己手敲一遍看看是否理解了里头的细枝末节。&lt;/li&gt;
&lt;li&gt;一定要学会思考，思考为什么要这样，而不是那样。还要举一反三地思考。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：你也许会很奇怪为什么下面的东西很偏Unix/Linux，这是因为我觉得Windows下的编程可能会在未来很没有前途，原因如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;现在的用户界面几乎被两个东西主宰了，1）Web，2）移动设备iOS或Android。Windows的图形界面不吃香了。&lt;/li&gt;
&lt;li&gt;越来越多的企业在用成本低性能高的Linux和各种开源技术来构架其系统，Windows的成本太高了。&lt;/li&gt;
&lt;li&gt;微软的东西变得太快了，很不持久，他们完全是在玩弄程序员。详情参见《&lt;a href="http://coolshell.cn/articles/3008.html" title="Windows编程革命简史"&gt;Windows编程革命史&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，我个人认为以后的趋势是前端是Web+移动，后端是Linux+开源。开发这边基本上没Windows什么事。&lt;/p&gt;
&lt;div class="alert alert-info"&gt;

#### 启蒙入门

&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;1、 学习一门脚本语言，例如Python/Ruby&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以让你摆脱对底层语言的恐惧感，脚本语言可以让你很快开发出能用得上的小程序。实践项目:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;处理文本文件，或者csv (关键词 python csv, python open, python sys)
    读一个本地文件，逐行处理（例如 word count，或者处理log）&lt;/li&gt;
&lt;li&gt;遍历本地文件系统 (sys, os,
    path)，例如写一个程序统计一个目录下所有文件大小并按各种条件排序并保存结果&lt;/li&gt;
&lt;li&gt;跟数据库打交道 (python sqlite)，写一个小脚本统计数据库里条目数量&lt;/li&gt;
&lt;li&gt;学会用各种print之类简单粗暴的方式进行调试&lt;/li&gt;
&lt;li&gt;学会用Google (phrase, domain, use reader to follow tech blogs)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为什么要学脚本语言，因为他们实在是太方便了，很多时候我们需要写点小工具或是脚本来帮我们解决问题，你就会发现正规的编程语言太难用了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、 用熟一种程序员的编辑器(不是IDE) 和一些基本工具&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vim / Emacs / Notepad++，学会如何配置代码补全，外观，外部命令等。&lt;/li&gt;
&lt;li&gt;Source Insight (或 ctag)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用这些东西不是为了Cool，而是这些编辑器在查看、修改代码/配置文章/日志会更快更有效率。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、 熟悉Unix/Linux Shell和常见的命令行&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果你用windows，至少学会用虚拟机里的linux， vmware
    player是免费的，装个Ubuntu吧&lt;/li&gt;
&lt;li&gt;一定要少用少用图形界面。&lt;/li&gt;
&lt;li&gt;学会使用man来查看帮助&lt;/li&gt;
&lt;li&gt;文件系统结构和基本操作
    ls/chmod/chown/rm/find/ln/cat/mount/mkdir/tar/gzip …&lt;/li&gt;
&lt;li&gt;学会使用一些文本操作命令 sed/awk/grep/tail/less/more …&lt;/li&gt;
&lt;li&gt;学会使用一些管理命令 ps/top/lsof/netstat/kill/tcpdump/iptables/dd…&lt;/li&gt;
&lt;li&gt;了解/etc目录下的各种配置文章，学会查看/var/log下的系统日志，以及/proc下的系统运行信息&lt;/li&gt;
&lt;li&gt;了解正则表达式，使用正则表达式来查找文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于程序员来说Unix/Linux比Windows简单多了。（参看我四年前CSDN的博文《&lt;a href="http://blog.csdn.net/haoel/article/details/1533720"&gt;其实Unix很简单&lt;/a&gt;》）学会使用Unix/Linux你会发现图形界面在某些时候实在是太难用了，相当地相当地降低工作效率。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、 学习Web基础（HTML/CSS/JS) + 服务器端技术 (LAMP)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;未来必然是Web的世界，学习WEB基础的最佳网站是&lt;a href="http://www.w3school.com.cn/"&gt;W3School&lt;/a&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;学习HTML基本语法&lt;/li&gt;
&lt;li&gt;学习CSS如何选中HTML元素并应用一些基本样式（关键词：box model）&lt;/li&gt;
&lt;li&gt;学会用  Firefox + Firebug 或 chrome
    查看你觉得很炫的网页结构，并动态修改。&lt;/li&gt;
&lt;li&gt;学习使用Javascript操纵HTML元件。理解DOM和动态网页（&lt;a href="http://oreilly.com/catalog/9780596527402"&gt;http://oreilly.com/catalog/9780596527402&lt;/a&gt;)
    网上有免费的章节，足够用了。或参看 &lt;a href="http://www.w3school.com.cn/htmldom/index.asp"&gt;DOM&lt;/a&gt; 。&lt;/li&gt;
&lt;li&gt;学会用  Firefox + Firebug 或 chrome
    调试Javascript代码（设置断点，查看变量，性能，控制台等）&lt;/li&gt;
&lt;li&gt;在一台机器上配置&lt;a href="http://coolshell.cn/articles/www.apache.org"&gt;Apache &lt;/a&gt;或 &lt;a href="http://coolshell.cn/articles/nginx.net"&gt;Nginx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;学习&lt;a href="http://coolshell.cn/articles/www.php.net"&gt;PHP&lt;/a&gt;，让后台PHP和前台HTML进行数据交互，对服务器相应浏览器请求形成初步认识。实现一个表单提交和反显的功能。&lt;/li&gt;
&lt;li&gt;把PHP连接本地或者远程数据库 MySQL（MySQL 和 SQL现学现用够了）&lt;/li&gt;
&lt;li&gt;跟完一个名校的网络编程课程（例如：&lt;a href="http://www.stanford.edu/~ouster/cgi-bin/cs142-fall10/index.php"&gt;http://www.stanford.edu/~ouster/cgi-bin/cs142-fall10/index.php&lt;/a&gt; )
    不要觉得需要多于一学期时间，大学生是全职一学期选3-5门课，你业余时间一定可以跟上&lt;/li&gt;
&lt;li&gt;学习一个javascript库（例如jQuery 或 ExtJS）+  Ajax
    (异步读入一个服务器端图片或者数据库内容）+JSON数据格式。&lt;/li&gt;
&lt;li&gt;HTTP: The Definitive Guide
    读完前4章你就明白你每天上网用浏览器的时候发生的事情了(proxy,
    gateway, browsers)&lt;/li&gt;
&lt;li&gt;做个小网站（例如：一个小的留言板，支持用户登录，Cookie/Session，增、删、改、查，上传图片附件，分页显示）&lt;/li&gt;
&lt;li&gt;买个域名，租个空间，做个自己的网站。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="alert alert-info"&gt;

#### 进阶加深

&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;1、 C语言和操作系统调用&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;重新学C语言，理解指针和内存模型，用C语言实现一下各种经典的算法和数据结构。推荐《&lt;a href="http://product.china-pub.com/197050"&gt;计算机程序设计艺术&lt;/a&gt;》、《&lt;a href="http://product.china-pub.com/31701"&gt;算法导论&lt;/a&gt;》和《&lt;a href="http://product.china-pub.com/209243"&gt;编程珠玑&lt;/a&gt;》。&lt;/li&gt;
&lt;li&gt;学习&lt;a href="http://coolshell.cn/articles/3723.html" title="（麻省理工免费课程）计算机科学和编程导论"&gt;（麻省理工免费课程）计算机科学和编程导论&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;学习&lt;a href="http://coolshell.cn/articles/2474.html" title="（麻省理工免费课程）C语言内存管理和C++面向对象编程"&gt;（麻省理工免费课程）C语言内存管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;学习Unix/Linux系统调用（&lt;a href="http://product.china-pub.com/30181"&gt;Unix高级环境编程&lt;/a&gt;），，了解系统层面的东西。&lt;ul&gt;
&lt;li&gt;用这些系统知识操作一下文件系统，用户（实现一个可以拷贝目录树的小程序）&lt;/li&gt;
&lt;li&gt;用fork/wait/waitpid写一个多进程的程序，用pthread写一个多线程带同步或互斥的程序。多进程多进程购票的程序。&lt;/li&gt;
&lt;li&gt;用signal/kill/raise/alarm/pause/sigprocmask实现一个多进程间的信号量通信的程序。&lt;/li&gt;
&lt;li&gt;学会使用gcc和gdb来编程和调试程序（参看我的《&lt;a href="http://coolshell.cn/articles/blog.csdn.net/haoel/article/details/2879"&gt;用gdb调试程序&lt;/a&gt;》）&lt;/li&gt;
&lt;li&gt;学会使用makefile来编译程序。（参看我的《&lt;a href="http://coolshell.cn/articles/blog.csdn.net/haoel/article/details/2886"&gt;跟我一起写makefile&lt;/a&gt;》）&lt;/li&gt;
&lt;li&gt;IPC和Socket的东西可以放到高级中来实践。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;学习Windows SDK编程（&lt;a href="http://product.china-pub.com/52880"&gt;Windows
    程序设计 &lt;/a&gt;，&lt;a href="http://product.china-pub.com/3804"&gt;MFC程序设计&lt;/a&gt;）&lt;ul&gt;
&lt;li&gt;写一个窗口，了解WinMain/WinProcedure，以及Windows的消息机制。&lt;/li&gt;
&lt;li&gt;写一些程序来操作Windows
    SDK中的资源文件或是各种图形控件，以及作图的编程。&lt;/li&gt;
&lt;li&gt;学习如何使用MSDN查看相关的SDK函数，各种WM_消息以及一些例程。&lt;/li&gt;
&lt;li&gt;这本书中有很多例程，在实践中请不要照抄，试着自己写一个自己的例程。&lt;/li&gt;
&lt;li&gt;不用太多于精通这些东西，因为GUI正在被Web取代，主要是了解一下Windows
    图形界面的编程。@&lt;a href="http://twitter.com/#!/virushuo" title="virushuo"&gt;virushuo&lt;/a&gt; 说：“ 我觉得GUI确实不那么热门了，但充分理解GUI工作原理是很重要的。包括移动设备开发，如果没有基础知识仍然很吃力。或者说移动设备开发必须理解GUI工作，或者在win那边学，或者在mac/iOS上学”。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2、学习Java&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java 的学习主要是看经典的Core Java 《&lt;a href="http://product.china-pub.com/208978"&gt;Java
    核心技术编程&lt;/a&gt;》和《&lt;a href="http://product.china-pub.com/34838"&gt;Java编程思想&lt;/a&gt;》（有两卷，我仅链了第一卷，足够了，因为Java的图形界面了解就可以了）&lt;/li&gt;
&lt;li&gt;学习JDK，学会查阅Java API
    Doc &lt;a href="http://download.oracle.com/javase/6/docs/api/"&gt;http://download.oracle.com/javase/6/docs/api/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;了解一下Java这种虚拟机语言和C和Python语言在编译和执行上的差别。从C、Java、Python思考一下“跨平台”这种技术。&lt;/li&gt;
&lt;li&gt;学会使用IDE Eclipse，使用Eclipse 编译，调试和开发Java程序。&lt;/li&gt;
&lt;li&gt;建一个Tomcat的网站，尝试一下JSP/Servlet/JDBC/MySQL的Web开发。把前面所说的那个PHP的小项目试着用JSP和Servlet实现一下。&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;

**3、Web的安全与架构**

&lt;/div&gt;

&lt;div&gt;

-   学习HTML5，网上有很多很多教程，以前[酷壳](http://coolshell.cn/)也介绍过很多，我在这里就不罗列了。
-   学习Web开发的安全问题（参考[新浪微博被攻击的这个事](http://coolshell.cn/articles/4914.html "新浪微博的XSS攻击")，以及[Ruby的这篇文章](http://guides.rubyonrails.org/security.html)）
-   学习HTTP
    Server的rewrite机制，Nginx的反向代理机制，[fast-cgi](http://en.wikipedia.org/wiki/Fast_CGI)（如：[PHP-FPM](http://php-fpm.org/)）
-   学习Web的静态页面缓存技术。
-   学习Web的异步工作流处理，数据Cache，数据分区，负载均衡，水平扩展的构架。
-   **实践任务：**
    -   使用HTML5的canvas 制作一些Web动画。
    -   尝试在前面开发过的那个Web应用中进行SQL注入，JS注入，以及XSS攻击。
    -   把前面开发过的那个Web应用改成构造在Nginx + PHP-FPM +
        静态页面缓存的网站

&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;4、学习关系型数据库&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你可以安装MSSQLServer或MySQL来学习数据库。&lt;/li&gt;
&lt;li&gt;学习教科书里数据库设计的那几个范式，1NF，2NF，3NF，……&lt;/li&gt;
&lt;li&gt;学习数据库的存过，触发器，视图，建索引，游标等。&lt;/li&gt;
&lt;li&gt;学习SQL语句，明白表连接的各种概念（参看《&lt;a href="http://coolshell.cn/articles/3463.html" title="图解SQL的Join"&gt;SQL
     Join的图示&lt;/a&gt;》）&lt;/li&gt;
&lt;li&gt;学习如何优化数据库查询（参看《&lt;a href="http://coolshell.cn/articles/1846.html" title="MySQL性能优化的最佳20+条经验"&gt;MySQL的优化&lt;/a&gt;》）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实践任务&lt;/strong&gt;：设计一个论坛的数据库，至少满足3NF，使用SQL语句查询本周，本月的最新文章，评论最多的文章，最活跃用户。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;5、一些开发工具&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;学会使用SVN或Git来管理程序版本。&lt;/li&gt;
&lt;li&gt;学会使用JUnit来对Java进行单元测试。&lt;/li&gt;
&lt;li&gt;学习C语言和Java语言的coding standard 或 coding
    guideline。（我N年前写过一篇关C语言非常简单的文章——《&lt;a href="http://blog.csdn.net/haoel/article/category/9200/2"&gt;编程修养&lt;/a&gt;》，这样的东西你可以上网查一下，一大堆）。&lt;/li&gt;
&lt;li&gt;推荐阅读《&lt;a href="http://product.china-pub.com/28351"&gt;代码大全&lt;/a&gt;》《&lt;a href="http://product.china-pub.com/196374"&gt;重构&lt;/a&gt;》《&lt;a href="http://product.china-pub.com/196266"&gt;代码整洁之道&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="alert alert-info"&gt;

#### 高级深入

&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;1、C++ / Java 和面向对象&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我个人以为学好C++，Java也就是举手之劳。但是C++的学习曲线相当的陡。不过，我觉得C++是最需要学好的语言了。参看两篇趣文“&lt;a href="http://coolshell.cn/articles/2287.html" title="C++ 程序员自信心曲线图"&gt;C++学习信心图&lt;/a&gt;”
和“&lt;a href="http://coolshell.cn/articles/2250.html" title="“21天教你学会C++”"&gt;21天学好C++&lt;/a&gt;”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;学习&lt;a href="http://coolshell.cn/articles/2474.html" title="（麻省理工免费课程）C语言内存管理和C++面向对象编程"&gt;（麻省理工免费课程）C++面向对象编程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;读我的
    “&lt;a href="http://coolshell.cn/articles/4119.html" title="如何学好C++语言"&gt;如何学好C++&lt;/a&gt;”中所推荐的那些书至少两遍以上（如果你对C++的理解能够深入到像我所写的《&lt;a href="http://blog.csdn.net/haoel/article/details/1948051"&gt;C++虚函数表解析&lt;/a&gt;》或是《&lt;a href="http://blog.csdn.net/haoel/article/details/3081328"&gt;C++对象内存存局&lt;/a&gt;（&lt;a href="http://blog.csdn.net/haoel/article/details/3081328"&gt;上&lt;/a&gt;）（&lt;a href="http://blog.csdn.net/haoel/article/details/3081385"&gt;下&lt;/a&gt;）》，或是《&lt;a href="http://blog.csdn.net/haoel/article/details/1388498"&gt;C/C++返回内部静态成员的陷阱&lt;/a&gt;》那就非常不错了）&lt;/li&gt;
&lt;li&gt;然后反思为什么C++要干成这样，Java则不是？你一定要学会对比C++和Java的不同。比如，Java中的初始化，垃圾回收，接口，异常，虚函数，等等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实践任务：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;用C++实现一个BigInt，支持128位的整形的加减乘除的操作。&lt;/li&gt;
&lt;li&gt;用C++封装一个数据结构的容量，比如hash table。&lt;/li&gt;
&lt;li&gt;用C++封装并实现一个智能指针（一定要使用模板）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;《&lt;a href="http://product.china-pub.com/25961"&gt;设计模式&lt;/a&gt;》必需一读，两遍以上，思考一下，这23个模式的应用场景。主要是两点：1）钟爱组合而不是继承，2）钟爱接口而不是实现。（也推荐《&lt;a href="http://product.china-pub.com/27862"&gt;深入浅出设计模式&lt;/a&gt;》）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实践任务：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;使用工厂模式实现一个内存池。&lt;/li&gt;
&lt;li&gt;使用策略模式制做一个类其可以把文本文件进行左对齐，右对齐和中对齐。&lt;/li&gt;
&lt;li&gt;使用命令模式实现一个命令行计算器，并支持undo和redo。&lt;/li&gt;
&lt;li&gt;使用修饰模式实现一个酒店的房间价格订价策略——旺季，服务，VIP、旅行团、等影响价格的因素。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;学习STL的用法和其设计概念  -
    容器，算法，迭代器，函数子。如果可能，请读一下其源码。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实践任务：&lt;/strong&gt;尝试使用面向对象、STL，设计模式、和WindowsSDK图形编程的各种技能&lt;ul&gt;
&lt;li&gt;做一个贪吃蛇或是俄罗斯方块的游戏。支持不同的级别和难度。&lt;/li&gt;
&lt;li&gt;做一个文件浏览器，可以浏览目录下的文件，并可以对不同的文件有不同的操作，文本文件可以打开编辑，执行文件则执行之，mp3或avi文件可以播放，图片文件可以展示图片。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;学习C++的一些类库的设计，如：
    MFC（看看候捷老师的《&lt;a href="http://product.china-pub.com/3565"&gt;深入浅出MFC&lt;/a&gt;》）
    ，Boost, ACE,  CPPUnit，STL
    （STL可能会太难了，但是如果你能了解其中的设计模式和设计那就太好了，如果你能深入到我写的《&lt;a href="http://blog.csdn.net/haoel/article/details/24058"&gt;STL
    string类的写时拷贝技术&lt;/a&gt;》那就非常不错了，ACE需要很强在的系统知识，参见后面的“加强对系统的了解”）&lt;/li&gt;
&lt;li&gt;Java是真正的面向对象的语言，Java的设计模式多得不能再多，也是用来学习面向对象的设计模式的最佳语言了（参看&lt;a href="http://coolshell.cn/articles/3320.html" title="JDK里的设计模式"&gt;Java中的设计模式&lt;/a&gt;）。&lt;/li&gt;
&lt;li&gt;推荐阅读《&lt;a href="http://product.china-pub.com/195040"&gt;Effective Java&lt;/a&gt;》
    and 《&lt;a href="http://product.china-pub.com/197212"&gt;Java解惑&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;学习Java的框架，Java的框架也是多，如Spring, Hibernate，Struts
    等等，主要是学习Java的设计，如IoC等。&lt;/li&gt;
&lt;li&gt;Java的技术也是烂多，重点学习J2EE架构以及JMS， RMI,
    等消息传递和远程调用的技术。&lt;/li&gt;
&lt;li&gt;学习使用Java做Web Service
    （&lt;a href="http://download.oracle.com/docs/cd/E17802_01/webservices/webservices/docs/2.0/tutorial/doc/"&gt;官方教程在这里&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实践任务： &lt;/strong&gt;尝试在Spring或Hibernate框架下构建一个有网络的Web
    Service的远程调用程序，并可以在两个Service中通过JMS传递消息。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C++和Java都不是能在短时间内能学好的，C++玩是的深，Java玩的是广，我建议两者选一个。我个人的学习经历是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;深究C++（我深究C/C++了十来年了）&lt;/li&gt;
&lt;li&gt;学习Java的各种设计模式。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2、加强系统了解&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;重要阅读下面的几本书：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href="http://product.china-pub.com/197413"&gt;Unix编程艺术&lt;/a&gt;》了解Unix系统领域中的设计和开发哲学、思想文化体系、原则与经验。你一定会有一种醍醐灌顶的感觉。&lt;/li&gt;
&lt;li&gt;《&lt;a href="http://product.china-pub.com/196770"&gt;Unix网络编程卷1，套接字&lt;/a&gt;》这是一本看完你就明白网络编程的书。重要注意TCP、UDP，以及多路复用的系统调用select/poll/epoll的差别。&lt;/li&gt;
&lt;li&gt;《&lt;a href="http://product.china-pub.com/35"&gt;TCP/IP详解 卷1:协议&lt;/a&gt;》-
    这是一本看完后你就可以当网络黑客的书。了解以太网的的运作原理，了解TCP/IP的协议，运作原理以及如何TCP的调优。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实践任务：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;理解什么是阻塞（同步IO），非阻塞（异步IO），多路复用（select,
    poll, epoll）的IO技术。&lt;/li&gt;
&lt;li&gt;写一个网络聊天程序，有聊天服务器和多个聊天客户端（服务端用UDP对部分或所有的的聊天客户端进Multicast或Broadcast）。&lt;/li&gt;
&lt;li&gt;写一个简易的HTTP服务器。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;《&lt;a href="http://product.china-pub.com/196859"&gt;Unix网络编程卷2，进程间通信&lt;/a&gt;》信号量，管道，共享内存，消息等各种IPC……
    这些技术好像有点老掉牙了，不过还是值得了解。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实践任务：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;主要实践各种IPC进程序通信的方法。&lt;/li&gt;
&lt;li&gt;尝试写一个管道程序，父子进程通过管道交换数据。&lt;/li&gt;
&lt;li&gt;尝试写一个共享内存的程序，两个进程通过共享内存交换一个C的结构体数组。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;学习《&lt;a href="http://product.china-pub.com/209058"&gt;Windows核心编程&lt;/a&gt;》一书。把CreateProcess，Windows线程、线程调度、线程同步（Event,
     信号量，互斥量）、异步I/O，内存管理，DLL，这几大块搞精通。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实践任务：&lt;/strong&gt;使用CreateProcess启动一个记事本或IE，并监控该程序的运行。把前面写过的那个简易的HTTP服务用线程池实现一下。写一个DLL的钩子程序监控指定窗口的关闭事件，或是记录某个窗口的按键。&lt;/li&gt;
&lt;li&gt;有了多线程、多进程通信，TCP/IP，套接字，C++和设计模式的基本，你可以研究一下ACE了。使用ACE重写上述的聊天程序和HTTP服务器（带线程池）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实践任务：&lt;/strong&gt;通过以上的所有知识，尝试&lt;ul&gt;
&lt;li&gt;写一个服务端给客户端传大文件，要求把100M的带宽用到80%以上。（注意，磁盘I/O和网络I/O可能会很有问题，想一想怎么解决，另外，请注意网络传输最大单元MTU）&lt;/li&gt;
&lt;li&gt;了解BT下载的工作原理，用多进程的方式模拟BT下载的原理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3、系统架构&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;负载均衡。HASH式的，纯动态式的。（可以到Google学术里搜一些&lt;a href="http://scholar.google.com.hk/scholar?q=%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1&amp;amp;hl=zh-CN&amp;amp;as_sdt=0&amp;amp;as_vis=1&amp;amp;oi=scholart"&gt;关于负载均衡的文章&lt;/a&gt;读读）&lt;/li&gt;
&lt;li&gt;多层分布式系统 –
    客户端服务结点层、计算结点层、数据cache层，数据层。J2EE是经典的多层结构。&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Content_delivery_network"&gt;CDN系统&lt;/a&gt; –
    就近访问，内容边缘化。&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Peer-to-peer"&gt;P2P式系统&lt;/a&gt;，研究一下BT和电驴的算法。比如：&lt;a href="http://en.wikipedia.org/wiki/Distributed_hash_table"&gt;DHT算法&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;服务器备份，双机备份系统（Live-Standby和Live-Live系统），两台机器如何通过心跳监测对方？集群主结点备份。&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Virtualization"&gt;虚拟化技术&lt;/a&gt;，使用这个技术，可以把操作系统当应用程序一下切换或重新配置和部署。&lt;/li&gt;
&lt;li&gt;学习&lt;a href="http://thrift.apache.org/"&gt;Thrift&lt;/a&gt;，二进制的高性能的通讯中间件，支持数据(对象)序列化和多种类型的RPC服务。&lt;/li&gt;
&lt;li&gt;学习&lt;a href="http://hadoop.apache.org/"&gt;Hadoop&lt;/a&gt;。Hadoop框架中最核心的设计就是：MapReduce和HDFS。MapReduce的思想是由Google的一篇论文所提及而被广为流传的，简单的一句话解释MapReduce就是“任务的分解与结果的汇总”。HDFS是Hadoop分布式文件系统（Hadoop
    Distributed File System）的缩写，为分布式计算存储提供了底层支持。&lt;/li&gt;
&lt;li&gt;了解&lt;a href="http://en.wikipedia.org/wiki/NoSQL"&gt;NoSQL数据库&lt;/a&gt;（有人说可能是一个&lt;a href="http://coolshell.cn/articles/3609.html" title="那些炒作过度的技术和概念"&gt;过渡炒作的技术&lt;/a&gt;），不过因为超大规模以及高并发的纯动态型网站日渐成为主流，而SNS类网站在数据存取过程中有着实时性等刚性需求，这使得目前NoSQL数据库慢慢成了人们所关注的焦点，并大有成为取代关系型数据库而成为未来主流数据存储模式的趋势。当前NoSQL数据库很多，大部分都是开源的，其中比较知名的有：MemcacheDB、Redis、Tokyo
    Cabinet(升级版为Kyoto
    Cabinet)、Flare、MongoDB、CouchDB、Cassandra、Voldemort等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;写了那么多，回顾一下，觉得自己相当的有成就感。希望大家不要吓着，我自己这十来年也在不断地学习，今天我也在学习中，人生本来就是一个不断学习和练级的过程。&lt;strong&gt;不过，一定有漏的，也有不对的，还希望大家补充和更正&lt;/strong&gt;。（&lt;strong&gt;我会根据大家的反馈随时更新此文&lt;/strong&gt;）欢迎大家通过我的微博（&lt;a href="http://weibo.com/haoel"&gt;@左耳朵耗子&lt;/a&gt;）和twitter（@&lt;a href="http://twitter.com/haoel"&gt;haoel&lt;/a&gt;）和我交流。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;—– 更新  2011/07/19 —–&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1）有朋友奇怪为什么我在这篇文章开头说了web+移动，却没有在后面提到iOS/Android的前端开发。因为我心里有一种感觉，移动设备上的UI最终也会被Javascript取代。大家可以用iPhone或Android看看google+，你就会明白了。&lt;/p&gt;
&lt;p&gt;2）有朋友说我这里的东西太多了，不能为了学习而学习，我非常同意。我在文章的前面也说了要思考。另外，千万不要以为我说的这些东西是一些新的技术，这份攻略里95%以上的全是基础。而且都是久经考验的基础技术。即是可以让你一通百通的技术，也是可以让你找到一份不错工作的技术。&lt;/p&gt;
&lt;p&gt;3）有朋友说学这些东西学完都40了，还不如想想怎么去挣钱。我想告诉大家，一是我今年还没有40岁，二是学无止境啊，三是我不觉得挣钱有多难，难的是怎么让你值那么多钱？无论是打工还是创业，是什么东西让你自己的价值，让你公司的价值更值钱？别的地方我不敢说，对于互联网或IT公司来说，技术实力绝对是其中之一。&lt;/p&gt;
&lt;p&gt;4）有朋友说技术都是工具，不应该如此痴迷这句话没有错，有时候我们需要更多的是抬起头来看看技术以外的事情，或者是说我们在作技术的时候不去思考为什么会有这个技术，为什么不是别的，问题不在于技术，问题在于我们死读书，读死书，成了技术的书呆子。&lt;/p&gt;
&lt;p&gt;5）
对于NoSQL，最近比较火，但我对其有点保守，所以，我只是说了解就可以。对于Hadoop，我觉得其在分布式系统上有巨大的潜力，所以需要学习。 对于关系型数据库，的确是很重要的东西，这点是我的疏忽，在原文里补充。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;转载自 陈皓@&lt;a href="http://coolshell.cn/"&gt;酷 壳 – CoolShell.cn&lt;/a&gt; &lt;/strong&gt;&lt;/p&gt;</summary><category term="C"></category><category term="Python"></category><category term="程序员"></category></entry><entry><title>WordPress主题文件的调用顺序</title><link href="mirsking.tk/blog/calling-sequence-of-wordpresss-theme-files.html" rel="alternate"></link><updated>2014-01-15T08:10:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-01-15:mirsking.tk/blog/calling-sequence-of-wordpresss-theme-files.html</id><summary type="html">&lt;p&gt;本文将展示主题文件执行的层次结构。简而言之,当你加载一个页面时，我们要看看哪些模板文件被执行。您可能已经知道单篇日志是用single.php解析的。单个页面是加载page.php来render的。但WordPress将根据各种实际情况来寻找不同的模板文件,因此，这里，我们就要看看这是如何工作的。&lt;/p&gt;
&lt;p&gt;我们首先应该清楚这一点:没有 index.php和style.css你的主题已经不再是一个有效的WP主题…所以理所当然,如果你只有这两个文件,每一个网页被render时WP都将试图加载index.php。各位客观且快速浏览一眼下面这个“cheatsheet”来看看我所指的:  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.yeahzan.com/zanblog/wp-content/uploads/2013/07/TemplateMap.jpg"&gt;&lt;img alt="TemplateMap" src="http://www.yeahzan.com/zanblog/wp-content/uploads/2013/07/TemplateMap.jpg" /&gt;&lt;/a&gt;&lt;br /&gt;
（ps:这个图应该从上至下，从左往右看。）&lt;/p&gt;
&lt;p&gt;注意一下每个页面类型的执行流程都将在index.php终结。这就是为什么index.php是每一个WordPress主题所必须的文件。如果我们在WP主题中遗漏任何其他文件(例如,如果没有“search.php”),WP会自动调用index.php。&lt;/p&gt;
&lt;p&gt;现在让我们来看看一些执行顺序的细节问题。&lt;br /&gt;
我要向你们展示WP在你当前活动主题文件夹中搜索文件的流程。&lt;br /&gt;
当你打算从现在开始创造一个WordPress主题的话，我希望这将会是有用的:&lt;br /&gt;
我将会向你展示每一类型的文件执行的层次。&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;首页&lt;/h3&gt;
&lt;p&gt;对于每一个网站，这是第一,也是最重要的一个页面。所以WP提供了极大的范围来让你定制这个页面。让我们看看这个用于显示首页的文件的层次。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;front-page.php&lt;/li&gt;
&lt;li&gt;home.php&lt;/li&gt;
&lt;li&gt;index.php&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;当客户端请求主页时,WP将搜索front-page.php。
如果不存在,它将会使用home.php。如果
home.php存在,它会用到它。否则,它会默认采用index.php。&lt;/p&gt;
&lt;h3&gt;单篇日志&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;single-&lt;strong&gt;[post-type]&lt;/strong&gt;.php&lt;/li&gt;
&lt;li&gt;single.php&lt;/li&gt;
&lt;li&gt;index.php&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;只要你需要，WordPress可以有各种日志类型。这将会更容易使得所有/一些日志类型可以有不同的设计。默认情况下“post”是WP主要和默认的日志类型。&lt;/p&gt;
&lt;p&gt;这样，举例来说,如果你的自定义日志类型是 product
,那么它的模板将会是single-product.php&lt;/p&gt;
&lt;p&gt;了解更多如何添加新日志类型,你可以参考&lt;a href="http://ihacklog.com/l.php?url=http%3A%2F%2Fcodex.wordpress.org%2FFunction_Reference%2Fregister_post_type"&gt;这个链接&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;单个静态页面&lt;/h3&gt;
&lt;p&gt;其实这个在WP里面就叫page,这里翻译成中文后反倒不好分清了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;[custom-template]&lt;/strong&gt;.php&lt;/li&gt;
&lt;li&gt;page-&lt;strong&gt;[slug]&lt;/strong&gt;.php&lt;/li&gt;
&lt;li&gt;page-&lt;strong&gt;[id]&lt;/strong&gt;.php&lt;/li&gt;
&lt;li&gt;page.php&lt;/li&gt;
&lt;li&gt;index.php&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;与post类型一样,类型,我们可以使用自定义页模板让page类型的页面有不同的页面布局。WP首先搜索指定的页面模板文件(如果存在)。&lt;/p&gt;
&lt;p&gt;如果没有找到,它将寻找带有当前页面别名(slug)的模板文件。基本上,如果别名是aboutus,那么它将在当前主题文件夹中搜索文件page-aboutus.php。&lt;/p&gt;
&lt;p&gt;WP将像搜索别名页面模板一样搜索文件ID模板。&lt;/p&gt;
&lt;h3&gt;分类&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;category-&lt;strong&gt;[slug]&lt;/strong&gt;.php&lt;/li&gt;
&lt;li&gt;category-&lt;strong&gt;[id]&lt;/strong&gt;.php&lt;/li&gt;
&lt;li&gt;category.php&lt;/li&gt;
&lt;li&gt;archive.php&lt;/li&gt;
&lt;li&gt;index.php&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;我相信，如果你已经看完了上面的话，这里应该不用我解释了。文件搜索规则是一样的。&lt;/p&gt;
&lt;h3&gt;标签&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;tag-&lt;strong&gt;[slug]&lt;/strong&gt;.php&lt;/li&gt;
&lt;li&gt;tag-&lt;strong&gt;[id]&lt;/strong&gt;.php&lt;/li&gt;
&lt;li&gt;tag.php&lt;/li&gt;
&lt;li&gt;archive.php&lt;/li&gt;
&lt;li&gt;index.php&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3&gt;其它分类（Taxonomy）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;taxonomy-&lt;strong&gt;[tax]&lt;/strong&gt;-&lt;strong&gt;[term]&lt;/strong&gt;.php&lt;/li&gt;
&lt;li&gt;taxonomy-&lt;strong&gt;[tax]&lt;/strong&gt;.php&lt;/li&gt;
&lt;li&gt;taxonomy.php&lt;/li&gt;
&lt;li&gt;archive.php&lt;/li&gt;
&lt;li&gt;index.php&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里原文并没有做多少解释。但个人觉得这里要稍微解释下。什么是taxonomy?它的英文意思很简单，就是“分类”。但是在WP里面仅这么说的话，我相应很多人还是会一头雾水。还有，什么是term
? term 的英文意思是术语。  &lt;/p&gt;
&lt;p&gt;在WP里面，term可以是post_tag(日志标签)、link_category（链接类别）、category(日志分类）及任何其它自定义的分类。例如，自定义了一个名为book(书籍，自定义日志类型）的日志类型，可以把
writer(作家)作为taxonomy ,那么作家的名字，如 hanhan
(韩寒），就是term之一，一个taxonomy下可以有很多term.也就是说，taxonomy是term的一个集合。这样，我们就可以有taxonomy-writer-hanhan.php
作为显示韩寒的书籍分类页面的模板，taxonomy-writer.php
作为显示书籍分类的模板。&lt;/p&gt;
&lt;h3&gt;作者&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;author-&lt;strong&gt;[author-nicname]&lt;/strong&gt;.php&lt;/li&gt;
&lt;li&gt;author-&lt;strong&gt;[author-id]&lt;/strong&gt;.php&lt;/li&gt;
&lt;li&gt;author.php&lt;/li&gt;
&lt;li&gt;archive.php&lt;/li&gt;
&lt;li&gt;index.php&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3&gt;附件&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;[mime-type]&lt;/strong&gt;.php&lt;/li&gt;
&lt;li&gt;attachment.php&lt;/li&gt;
&lt;li&gt;single.php&lt;/li&gt;
&lt;li&gt;index.php&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3&gt;日期&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;date.php&lt;/li&gt;
&lt;li&gt;archive.php&lt;/li&gt;
&lt;li&gt;index.php&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3&gt;存档&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;archive.php&lt;/li&gt;
&lt;li&gt;index.php&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3&gt;搜索&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;search.php&lt;/li&gt;
&lt;li&gt;index.php&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;搜索模板用于显示搜索结果。&lt;/p&gt;
&lt;h3&gt;404页面&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;404.php&lt;/li&gt;
&lt;li&gt;index.php&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3&gt;结论&lt;/h3&gt;
&lt;p&gt;显然你可以使用这些知识在广泛的方法不同为各种类型的页面加载自定义模板…在很多情况下,即使你在使用一个现有的主题,你仍可以在不改变现有模板文件的情况下得到一个定制的解决方案。你只是需要创建新文件,并按照上述规则指定一个新的名字。&lt;/p&gt;
&lt;p&gt;分享你的想法和任何可以包含以上的层次结构的附加文件。&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;后话&lt;/h3&gt;
&lt;p&gt;也话有朋友会说，你这个文章中列的文件不完整，不是还有 comments.php 和
comments-popup.php
吗？是的，对于一个标准的主题，这是应该有的。不过，本文不是在讨论WP主题应该有哪些文件，而是讨论主题文件的执行顺序问题，归根结底，comments.php
和 comments-popup.php
不是被WP直接调用的，而是由主题制作者自行调用的（由single.php或page.php调用&lt;strong&gt;\&amp;lt;?php
comments_template(); ?&gt;&lt;/strong&gt;）。因此，原作者在这里没有列出comments.php 和
comments-popup.php 我想也是完全合理的。&lt;/p&gt;
&lt;p&gt;本文转载自  ihacklog.com&lt;/p&gt;</summary><category term="PHP"></category><category term="WordPress"></category><category term="主题"></category></entry></feed>