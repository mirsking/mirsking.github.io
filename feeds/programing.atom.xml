<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>飞扬博客-MirsKing</title><link href="/" rel="alternate"></link><link href="/feeds/programing.atom.xml" rel="self"></link><id>/</id><updated>2014-03-20T22:33:00+08:00</updated><entry><title>Matlab绘制各种动态心形图并保存为Gif</title><link href="/programing/use-matlab-to-draw-and-save-a-cool-gif-dynamic-photo.html" rel="alternate"></link><updated>2014-03-20T22:33:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-03-20:programing/use-matlab-to-draw-and-save-a-cool-gif-dynamic-photo.html</id><summary type="html">&lt;p&gt;“码农”，这个自从接触编程，就永远不可能丢掉的头衔，让多少程序猿痛并快乐着。&lt;/p&gt;
&lt;p&gt;作为码农中的一员，却也时常给自己找些乐趣，比如最近很火的&lt;a href="http://gabrielecirulli.github.io/2048/"&gt;2048游戏&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;又比如：用Matlab画出一些漂亮的图片。先放一张图（注意，点击图片可以看到动态图哦）：&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/heart-beats.gif"&gt;&lt;img alt="heart-beats" src="/images/heart-beats.gif" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;还不错吧，下面就贴出源代码，造福大家：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;clc&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;  
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="nv"&gt;%200&lt;/span&gt;&lt;span class="err"&gt;这个值越大，则画面越细腻&lt;/span&gt;  
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;meshgrid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;I1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;.\^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="sr"&gt;/4\*Y.\^2+Z.\^2-1).\^3-X.\^2.\*Z.\^3-9/&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;.\^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;.\*&lt;/span&gt;&lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="o"&gt;.\^&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;patch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isosurface&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;I1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;  
&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;FaceColor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;EdgeColor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;none&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;axis&lt;/span&gt; &lt;span class="n"&gt;equal&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="n"&gt;axis&lt;/span&gt; &lt;span class="n"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="n"&gt;light&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Posi&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt; &lt;span class="err"&gt;在(&lt;/span&gt;&lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;点处建立一个光源&lt;/span&gt;  
&lt;span class="n"&gt;lighting&lt;/span&gt; &lt;span class="n"&gt;phong&lt;/span&gt;  
&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gca&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;nextplot&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;replacechildren&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="nv"&gt;%&lt;/span&gt; &lt;span class="err"&gt;记录电影&lt;/span&gt;  
&lt;span class="nv"&gt;XX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;XData&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;YY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;YData&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;ZZ&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ZData&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;  
&lt;span class="n"&gt;scale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;XData&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;XX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;YData&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;YY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ZData&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;ZZ&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;drawnow&lt;/span&gt;  
&lt;span class="n"&gt;MakeGif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;heart-beats.gif&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;end&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里要调用MakeGif这个函数，如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;%% MakeGif save the pictures in the figure window to a dynamic photo.  &lt;/span&gt;
&lt;span class="c"&gt;% example:  &lt;/span&gt;
&lt;span class="c"&gt;% MakeGif(filename,i)  &lt;/span&gt;
&lt;span class="c"&gt;% filename is photo&amp;#39;s name you want to save with a extension name of  &lt;/span&gt;
&lt;span class="c"&gt;% gif.  &lt;/span&gt;
&lt;span class="c"&gt;% i means the ith picture of the dynamic photo. That&amp;#39;s to say when  &lt;/span&gt;
&lt;span class="c"&gt;% you plot the ith picture, use MakeGif(filename,i) to save it, and  &lt;/span&gt;
&lt;span class="c"&gt;% after you finish the plot, the photo will contain all your picture.  &lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;MakeGif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;filename,i&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getframe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gcf&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;imind&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;frame2im&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;imind&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rgb2ind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imind&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;256&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;1  
&lt;span class="n"&gt;imwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imind&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;gif&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;Loopcount&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;inf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;DelayTime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;05&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c"&gt;%感觉时间太短改这个，但是储存就很卡  &lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;  

&lt;span class="n"&gt;imwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imind&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;gif&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;WriteMode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;append&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;DelayTime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;1&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c"&gt;%感觉时间太短改这个，但是储存就很卡  &lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;  
&lt;span class="k"&gt;end&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;大量的注释，我就不多解释了。其原理就是每帧图像转换为index型图像数据存入gif文件中。&lt;/p&gt;
&lt;p&gt;怎么样？不过瘾？再来一个（注意，点击图片可以看到动态图哦）：  &lt;/p&gt;
&lt;p&gt;&lt;a href="/images/heart-waves.gif"&gt;&lt;img alt="heart-waves" src="/images/heart-waves.gif" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;同样附上源码：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;close&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;  
&lt;span class="n"&gt;clear&lt;/span&gt;  
&lt;span class="n"&gt;clc&lt;/span&gt;  
&lt;span class="n"&gt;Times&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;meshgrid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.01&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Times&lt;/span&gt;  
&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;(:,:,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.\^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;.\*&lt;/span&gt;&lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="o"&gt;.\*&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;.\^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.\*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="n"&gt;end&lt;/span&gt;  
&lt;span class="n"&gt;figure&lt;/span&gt;  
&lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;  
&lt;span class="n"&gt;hold&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;  
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Times&lt;/span&gt;  
&lt;span class="n"&gt;mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;(:,:,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;  
&lt;span class="n"&gt;drawnow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="n"&gt;MakeGif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;heart-waves.gif&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;hold&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;  
&lt;span class="n"&gt;end&lt;/span&gt;  
&lt;span class="n"&gt;hold&lt;/span&gt; &lt;span class="n"&gt;off&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;同样是调用MakeGif函数。&lt;/p&gt;
&lt;p&gt;总结一下，核心有两个：&lt;br /&gt;
1）构造漂亮的函数&lt;br /&gt;
2）画图，每一帧调用一次MakeGif保存为动态图  &lt;/p&gt;
&lt;p&gt;关于如何构造漂亮的函数，突然让我想到了笛卡尔的心型曲线了，什么时候有机会去搞搞。&lt;/p&gt;</summary><category term="Matlab"></category><category term="程序员"></category></entry><entry><title>你绝不知道的Linux中极好用的命令</title><link href="/programing/the-best-commands-you-never-knew-about-in-linux.html" rel="alternate"></link><updated>2014-02-18T17:50:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-02-18:programing/the-best-commands-you-never-knew-about-in-linux.html</id><summary type="html">&lt;h2&gt;引子&lt;/h2&gt;
&lt;p&gt;最近发现了一个很好玩的网站Quora。&lt;/p&gt;
&lt;p&gt;该网站的立意是：to share and grow the world's knowledge.&lt;/p&gt;
&lt;p&gt;而其实现途径则是：Ask any question, get real answers from people with
first hand experience, and blog about what you know.&lt;/p&gt;
&lt;p&gt;也就是说任何人可以发布自己的问题，然后由一群高智商、丰富经验的网友来答疑解难从而助力知识大爆发。&lt;/p&gt;
&lt;p&gt;听起来类似百度知道，但上边的问题和解答，个人感觉比百度知道的水平要高许多。&lt;/p&gt;
&lt;h2&gt;正文&lt;/h2&gt;
&lt;p&gt;好了，闲话休题。下边来为大家介绍在上面看到的一个好帖：《&lt;a href="http://www.quora.com/Jordan-Goldman-4/Posts/The-Best-Commands-You-Never-Knew-About-in-Linux?srid=toPT&amp;amp;share=1" title="The Best Commands You Never Knew About in Linux"&gt;The Best Commands You Never Knew About in Linux&lt;/a&gt;》。所以将其转过来，帮助自己提高，也推荐给大家。&lt;/p&gt;
&lt;p&gt;大家不得不承认，即使是最好的系统管理员也可能从未听说过一到两个好用的命令。下边这些命令，大家可以试一试，我保证他们会节约你的时间，至少会让你感到这些命令好酷！&lt;/p&gt;
&lt;p&gt;column——效果是把输入排列成多列。&lt;/p&gt;
&lt;p&gt;试一试：mount | column –t&lt;/p&gt;
&lt;p&gt;dstat——系统集成检测。快速地告诉你CPU、硬盘、带宽的使用情况等等。&lt;/p&gt;
&lt;p&gt;试一试：dstat -a&lt;/p&gt;
&lt;p&gt;tac——cat命令的逆操作。将输出保存成一个文件。&lt;/p&gt;
&lt;p&gt;试一试：tac \&amp;lt;文件名&gt;&lt;/p&gt;
&lt;p&gt;ctrl + r——查询你使用过的命令历史。如果你忘记了曾经精心输入的长命令，那么试试ctrl+r吧。&lt;/p&gt;
&lt;p&gt;watch——在y段时间内，没间隔x秒执行一个命令。&lt;/p&gt;
&lt;p&gt;试一试：watch –interval 3 df –h&lt;/p&gt;
&lt;p&gt;!\$——存储上一个命令的最后一个参数的值。&lt;/p&gt;
&lt;p&gt;试一试：cat \&amp;lt;文件名&gt;|echo !\$&lt;/p&gt;
&lt;p&gt;htop——交互的进程查看器（用来替代top），如果你想杀掉进程列表中的某个进程，那么htop值得一试。&lt;/p&gt;
&lt;p&gt;diff3——或许你用过diff命令，但是你曾经需要比较三个文件的不同吗？试试这个命令吧。&lt;/p&gt;
&lt;p&gt;cal——在命令窗中工作了许久，想快速看下日历？输入cal看看发生了什么把。&lt;/p&gt;
&lt;h2&gt;结语&lt;/h2&gt;
&lt;p&gt;文中提到了一些很奇怪的命令，正因为奇进而我们可能见到的机会比较小。但是有一部分命令如果熟练用起来还是不错的，比如：ctrl+r，比如tac。当然文中列出的命令只是linux庞大命令库的凤毛麟角，欢迎大家回帖分享大家喜欢的命令！&lt;/p&gt;</summary><category term="Linux"></category><category term="Bash"></category></entry><entry><title>Robotics Toolbox for MATLAB学习笔记（二）</title><link href="/programing/learning-robotics-toolbox-for-matlab2.html" rel="alternate"></link><updated>2014-02-14T18:23:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-02-14:programing/learning-robotics-toolbox-for-matlab2.html</id><summary type="html">&lt;p&gt;距离上次写学习笔记已经一个星期了，最近懒惰了，呵呵。重新走起！今天虽然是情人节+元宵节，但是学习丝毫不能落下。下面言归正传：&lt;/p&gt;
&lt;p&gt;首先贴出&lt;a href="http://www.mirsking.com/programingalgorithm/learning-robotics-toolbox-for-matlab/" title="Robotics Toolbox for MATLAB学习笔记（一）"&gt;Robotics Toolbox for MATLAB学习笔记（一）&lt;/a&gt;的地址（点击链接直达）。&lt;/p&gt;
&lt;p&gt;第三天（2014,2,14）操作臂逆运动学总结&lt;/p&gt;
&lt;h2&gt;操作臂逆运动学之——ikine()函数的学习&lt;/h2&gt;
&lt;p&gt;首先总结下前几天学习但没有总结的操作臂逆运动学函数ikine()。&lt;/p&gt;
&lt;p&gt;所谓逆运动学是由操作臂的位姿求取对应的角坐标参数。&lt;/p&gt;
&lt;p&gt;robotics工具箱中有ikine()函数可以方便实现。同时对于puma560这种六自由度的操作臂，还有更方便的ikine6s()函数。&lt;/p&gt;
&lt;h3&gt;ikine6s()函数的参数&lt;/h3&gt;
&lt;p&gt;由于逆运动学解的不唯一性，ikine6s()函数提供了一些参数以限定解的形式。如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="n"&gt;handed&lt;/span&gt;    &lt;span class="s"&gt;&amp;#39;l&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;  
&lt;span class="n"&gt;elbow&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;down&lt;/span&gt;    &lt;span class="s"&gt;&amp;#39;u&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;  
&lt;span class="n"&gt;wrist&lt;/span&gt; &lt;span class="n"&gt;flipped&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;flipped&lt;/span&gt;    &lt;span class="s"&gt;&amp;#39;f&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;另外，如果无解，则该函数会返回NaN&lt;/p&gt;
&lt;h3&gt;ikine()函数的参数&lt;/h3&gt;
&lt;p&gt;而对于ikine()函数。其调用形式有三种，如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ikine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ikine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Q0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OPTIONS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ikine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Q0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OPTIONS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中，T是位姿矩阵；Q0是角坐标的初始估计；M是Mask矩阵，使用它表示只取矩阵中为1对应的角度。&lt;/p&gt;
&lt;p&gt;而OPTIONS参数比较多。如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="s"&gt;&amp;#39;pinv&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="n"&gt;pseudo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;inverse&lt;/span&gt; &lt;span class="n"&gt;instead&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;Jacobian&lt;/span&gt; &lt;span class="n"&gt;transpose&lt;/span&gt;  
&lt;span class="s"&gt;&amp;#39;ilimit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;maximum&lt;/span&gt; &lt;span class="n"&gt;iteration&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="s"&gt;&amp;#39;tol&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;tolerance&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="n"&gt;norm&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt; &lt;span class="mf"&gt;1e-6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="s"&gt;&amp;#39;alpha&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="n"&gt;gain&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="s"&gt;&amp;#39;novarstep&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;disable&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;  
&lt;span class="s"&gt;&amp;#39;verbose&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;each&lt;/span&gt; &lt;span class="n"&gt;point&lt;/span&gt;  
&lt;span class="s"&gt;&amp;#39;verbose=2&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="nb"&gt;each&lt;/span&gt; &lt;span class="n"&gt;iteration&lt;/span&gt;  
&lt;span class="s"&gt;&amp;#39;plot&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt; &lt;span class="n"&gt;iteration&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="n"&gt;versus&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;好了，今天的逆运动学函数就总结到这里，最后的参数没来得及翻译，下次有机会再补上吧。&lt;/p&gt;
&lt;p&gt;另外，下一阶段将进行，轨迹规划相关内容的学习和总结。监督自己加把劲吧！&lt;/p&gt;</summary><category term="Matlab"></category><category term="Robotics Toolbox"></category></entry><entry><title>Robotics Toolbox for MATLAB学习笔记（一）</title><link href="/programing/learning-robotics-toolbox-for-matlab.html" rel="alternate"></link><updated>2014-02-05T10:03:00+08:00</updated><author><name>mirsking</name></author><id>tag:,2014-02-05:programing/learning-robotics-toolbox-for-matlab.html</id><summary type="html">&lt;p&gt;Robotics Toolbox for MATLAB是由Peter I. Corke编写的第三方工具箱。提供了机器人轨迹规划的各种函数。&lt;/p&gt;
&lt;p&gt;从今天开始要学习该工具箱并能熟练掌握。本文将记录每日的学习进度，以供将来查阅。&lt;/p&gt;
&lt;h3&gt;第一天（2014,2,5）Robotics Toolbox的安装与简单函数的学习&lt;/h3&gt;
&lt;p&gt;根据&lt;a href="http://www.petercorke.com/Robotics_Toolbox.html"&gt;官网的说明&lt;/a&gt;，安装步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download it from here in zip format (.zip).&lt;/li&gt;
&lt;li&gt;The Toolbox is tested with MATLAB R2011a.&lt;/li&gt;
&lt;li&gt;To install the Toolbox simply unpack the archive which will create
    the directory (folder) rvctools, and within that the directories
    robot, simulink, and common.&lt;/li&gt;
&lt;li&gt;Adjust your MATLABPATH to include rvctools Execute the startup file
    rvctools/startup_rvc.m and this will place the correct directories
    in your MATLAB path.&lt;/li&gt;
&lt;li&gt;Run the demo rtbdemo to see what it can do&lt;/li&gt;
&lt;li&gt;To get the MEX version of rne visit the folder rvctools/robot/mex
    and follow the directions in the README file&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;安装完成后，即可正常使用工具箱中的相关函数。本次测试了以下几个简单函数：rotx，roty，rotz，rpy2tr，tr2rpy等几个函数。&lt;/p&gt;
&lt;p&gt;这里简单介绍下rpy2tr函数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RPY2R&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RPY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OPTIONS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;orthonormal&lt;/span&gt; &lt;span class="n"&gt;rotation&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;  
&lt;span class="n"&gt;equivalent&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="err"&gt;  &lt;/span&gt;&lt;span class="n"&gt;specified&lt;/span&gt; &lt;span class="n"&gt;roll&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pitch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yaw&lt;/span&gt; &lt;span class="n"&gt;angles&lt;/span&gt;  
&lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="n"&gt;correspond&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;rotations&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt; &lt;span class="n"&gt;axes&lt;/span&gt; &lt;span class="n"&gt;respectively&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="n"&gt;If&lt;/span&gt; &lt;span class="n"&gt;RPY&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;multiple&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt; &lt;span class="n"&gt;they&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;assumed&lt;/span&gt; &lt;span class="n"&gt;torepresent&lt;/span&gt;  
&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;trajectory&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;three&lt;/span&gt; &lt;span class="n"&gt;dimensional&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
&lt;span class="n"&gt;where&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;last&lt;/span&gt; &lt;span class="nb"&gt;index&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;corresponds&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;RPY&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;就是说R = RPY2R(RPY, OPTIONS)是将欧拉角RPY（这个RPY是由分别绕X、Y、Z轴旋转的角度roll、pitch、yaw表示的）转换为旋转矩阵。如果RPY是多列矩阵，那么结果R表示的是最后一次的旋转矩阵。&lt;/p&gt;
&lt;p&gt;另外这个函数有两个选项，‘deg’表示以度数为单位输入；‘zyx’表示按Z、Y、X轴旋转得到旋转矩阵。&lt;/p&gt;
&lt;h3&gt;第二天（2014,2,7）Link() SerialLink()  fkine()函数学习&lt;/h3&gt;
&lt;h4&gt;link函数的调用格式&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;alphaD&lt;/span&gt; &lt;span class="n"&gt;sigma&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt; &lt;span class="n"&gt;sigma&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;CONVENTION&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt; &lt;span class="n"&gt;sigma&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;CONVENTION&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt; &lt;span class="n"&gt;sigma&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;CONVENTION&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参数CONVENTION可以取‘standard’和‘modified’，其中‘standard’代表采用标准的D-H参数，‘modified’代表采用改进的D-H参数。参数‘alpha’代表扭转角，参数‘A’代表杆件长度，参数‘theta’代表关节角，参数‘D’代表横距，参数‘sigma’代表关节类型：0代表旋转关节，非0代表移动关节。另外LINK还有一些数据域：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回扭转角&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回杆件长度&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回关节角&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回横距&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sigma&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回关节类型&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RP&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回‘&lt;/span&gt;&lt;span class="nv"&gt;R&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;旋转&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;或‘&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;移动&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mdh&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;若为标准&lt;/span&gt;&lt;span class="nv"&gt;D&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="err"&gt;参数返回&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="err"&gt;，否则返回&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;offset&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回关节变量偏移&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;qlim&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回关节变量的上下限&lt;/span&gt; &lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;min&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;islimit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;如果关节变量超限，返回&lt;/span&gt; &lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回一个&lt;/span&gt;&lt;span class="nv"&gt;3&lt;/span&gt;&lt;span class="err"&gt;×&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="err"&gt;对称惯性矩阵&lt;/span&gt;

&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回关节质量&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回&lt;/span&gt;&lt;span class="nv"&gt;3&lt;/span&gt;&lt;span class="err"&gt;×&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;的关节齿轮向量&lt;/span&gt;

&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回齿轮的传动比&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Jm&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回电机惯性&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回粘性摩擦&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tc&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;返回库仑摩擦&lt;/span&gt;

&lt;span class="nv"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dh&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;legacy&lt;/span&gt; &lt;span class="n"&gt;DH&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;

&lt;span class="n"&gt;LINK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dyn&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;legacy&lt;/span&gt; &lt;span class="n"&gt;DYN&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;特别要注意的是Link函数的参数顺序在新版本的Toolbox中发生了变换，由之前的L
= LINK([alpha A theta D])变为L = LINK([theta D  A  alpha ])&lt;/p&gt;
&lt;h4&gt;SerialLink函数的调用格式&lt;/h4&gt;
&lt;p&gt;顾名思义，该函数是将多个由Link生成的连杆连接起来。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;bot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SerialLink&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;L1&lt;/span&gt; &lt;span class="n"&gt;L2&lt;/span&gt; &lt;span class="n"&gt;L3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;my robot&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果连杆是由L1 L2 等表示，则按照上式调用。&lt;/p&gt;
&lt;p&gt;或者连杆有L(1) L(2)等表示，则可简洁地表示为&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;bot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SerialLink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;my robot&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;fkine函数的调用格式&lt;/h4&gt;
&lt;p&gt;fkine函数是用来计算操作臂正向运动矩阵（forward kinematics），其调用格式为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fkine&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="sr"&gt;/4 -pi/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;该式表示将&lt;/span&gt;&lt;span class="nv"&gt;bot&lt;/span&gt;&lt;span class="err"&gt;操作臂的两个连杆分别旋转&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="sr"&gt;/4和 -pi/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="err"&gt;。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;plot函数的调用格式&lt;/h4&gt;
&lt;p&gt;SerialLink函数还有一个plot方法，该方法可以直观地将操作臂的运动状态以图形的形式表示。其调用方式和fkine函数类似。&lt;/p&gt;</summary><category term="Matlab"></category><category term="Robotics Toolbox"></category><category term="程序员"></category></entry></feed>